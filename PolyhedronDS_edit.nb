(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    227652,       5089]
NotebookOptionsPosition[    220383,       4992]
NotebookOutlinePosition[    220766,       5009]
CellTagsIndexPosition[    220723,       5006]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["PolyhedronDS  ", "Title",
 CellChangeTimes->{{3.604592400277894*^9, 3.604592442280909*^9}, {
  3.6161751893731203`*^9, 3.6161751921598873`*^9}, {3.616233081838628*^9, 
  3.6162330854373837`*^9}, {3.616277853093804*^9, 3.6162778655703363`*^9}, {
  3.616336865695582*^9, 3.61633687399676*^9}, {3.645523533561166*^9, 
  3.64552357094623*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[TextData[{
 "JOR 10Jul15. ",
 StyleBox["New",
  FontColor->RGBColor[1, 0, 1]],
 ": 24Jun16. ",
 StyleBox["vadjccws",
  FontSlant->"Italic"],
 "\nRevision of ConvexCapDS.nb for whole polyhedron."
}], "Subtitle",
 CellChangeTimes->{{3.6045924160858583`*^9, 3.6045924271812363`*^9}, {
  3.616277869211132*^9, 3.616277885386209*^9}, {3.616336857033277*^9, 
  3.616336857421995*^9}, {3.6455235459224987`*^9, 3.6455235848431673`*^9}, {
  3.6757763982729177`*^9, 3.675776440253582*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[TextData[{
 "Significant DS code, primarily creating ccw adjfaces lists around each \
vertex. Removal of all boundary issues from ",
 StyleBox["ConvexCapDS.nb",
  FontWeight->"Bold"],
 ".\nMove Polyhedron creation to ",
 StyleBox["ConvexPolyhedronMake.nb",
  FontWeight->"Bold"],
 ".\nNeeds ",
 StyleBox["Triangle.Angles.nb",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.6045924160858583`*^9, 3.6045924271812363`*^9}, {
  3.6161754139452133`*^9, 3.616175497432034*^9}, {3.616175586776231*^9, 
  3.616175598760043*^9}, {3.616276272127399*^9, 3.6162763590569563`*^9}, {
  3.6162777704309053`*^9, 3.616277816002232*^9}, {3.6455235989723873`*^9, 
  3.64552367511147*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"26e23b3f-407c-4255-9c0f-01ffbcf07efe"],

Cell[TextData[{
 "Input from ",
 StyleBox["ConvexPolyhedronMake.nb",
  FontWeight->"Bold"],
 ":\n{verts3d,faces}=TetGenConvexHull[pts];\n",
 StyleBox["verts3d",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontWeight->"Bold"],
 ": 3d coordinates of vertices, into which all other structs index.\n",
 StyleBox["faces",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " : indices of faces of convex hull (of sphere.c)\n\nDS computed by evaling \
all funcs in this nb. DS left global:\n",
 StyleBox["edges ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ": internal edge, {a,b}, with a&b indices into verts3d; sorted so a < b.\n",
 StyleBox["adjfaces",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ": pairs of face indices (into ",
 StyleBox["faces",
  FontSlant->"Italic"],
 ") on either side of ",
 StyleBox["edges",
  FontSlant->"Italic"],
 "; each pair sorted; indexed same as edges.\n",
 StyleBox["fangs",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " : angles at each face corner. ",
 StyleBox["fangs",
  FontSlant->"Italic"],
 "[i] are the angles for ",
 StyleBox["faces",
  FontSlant->"Italic"],
 "[i], in same order.\n",
 StyleBox["vadjccws ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ": list of {",
 StyleBox["vi",
  FontSlant->"Italic"],
 ", ",
 StyleBox["vadj",
  FontSlant->"Italic"],
 "}, ",
 StyleBox["vadj",
  FontSlant->"Italic"],
 " = list of face indices (into faces), in ccw order. The most important \
struct. Circular list; arb start ",
 StyleBox["fi",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.6045924160858583`*^9, 3.6045924271812363`*^9}, {
   3.6161754139452133`*^9, 3.616175497432034*^9}, {3.616175586776231*^9, 
   3.616175598760043*^9}, {3.616276272127399*^9, 3.616276427841195*^9}, {
   3.616276460378522*^9, 3.616276748713953*^9}, {3.616276949771069*^9, 
   3.6162770180181017`*^9}, {3.616277067297262*^9, 3.616277085010401*^9}, {
   3.616277123476739*^9, 3.616277183906763*^9}, 3.616277245891262*^9, {
   3.61627746159027*^9, 3.6162774653301373`*^9}, {3.6163376661260443`*^9, 
   3.6163376899491787`*^9}, {3.616342824277733*^9, 3.616342843180018*^9}, {
   3.616874772037222*^9, 3.616874836779297*^9}, {3.645523700313407*^9, 
   3.6455237225305767`*^9}, {3.645523753396152*^9, 3.645523807670475*^9}, 
   3.645526675056575*^9, {3.6455320337811337`*^9, 3.645532091600747*^9}, {
   3.645534978849821*^9, 3.645534982258129*^9}, 3.6455350335645*^9, {
   3.645538752106245*^9, 3.645538788233945*^9}, {3.6557405332719803`*^9, 
   3.6557405404220457`*^9}, 3.65574060969112*^9, 3.677069991182201*^9, 
   3.67707326362062*^9},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[TextData[{
 "coords of tilted cube in ",
 StyleBox["verts3d; ",
  FontSlant->"Italic"],
 "and",
 StyleBox[" faces",
  FontSlant->"Italic"],
 " (indices). \nFrom ",
 StyleBox["CubeCalcs.nb",
  FontWeight->"Bold"],
 " & ",
 StyleBox["ConvexPolyhedronMake.nb",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.5876766874771976`*^9, 3.58767669382759*^9}, {
  3.587676932725223*^9, 3.587676935310511*^9}, {3.5880233842939463`*^9, 
  3.5880234811214027`*^9}, {3.588060758399602*^9, 3.588060764582789*^9}, {
  3.588060840179935*^9, 3.588060959455077*^9}, {3.58806100037446*^9, 
  3.5880610158134212`*^9}, {3.604593526209601*^9, 3.604593540265007*^9}, {
  3.6239564536760387`*^9, 3.623956467353549*^9}, {3.625695250003704*^9, 
  3.6256952668373737`*^9}, {3.6256953376473207`*^9, 3.625695351301258*^9}, {
  3.645523834512998*^9, 3.645523852376499*^9}, {3.6455239809766197`*^9, 
  3.64552398122404*^9}, {3.645524538204526*^9, 3.6455245428111267`*^9}, {
  3.645524649850175*^9, 3.645524693834798*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mod", "[", 
     RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"i", "-", "1"}], ",", "n"}], "]"}], "+", "1"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Examples", ":"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mod", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "10"}], "]"}], ",", 
     RowBox[{"mod", "[", 
      RowBox[{"0", ",", "10"}], "]"}], ",", 
     RowBox[{"mod", "[", 
      RowBox[{"1", ",", "10"}], "]"}], ",", 
     RowBox[{"mod", "[", 
      RowBox[{"5", ",", "10"}], "]"}], ",", 
     RowBox[{"mod", "[", 
      RowBox[{"10", ",", "10"}], "]"}], ",", 
     RowBox[{"mod", "[", 
      RowBox[{"11", ",", "10"}], "]"}], ",", 
     RowBox[{"mod", "[", 
      RowBox[{"13", ",", "10"}], "]"}]}], "}"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6456277852771473`*^9, 3.645627785564661*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"94c7e2c2-7b2a-458e-a348-13fc2a64f097"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", "10", ",", "1", ",", "5", ",", "10", ",", "1", ",", "3"}],
   "}"}]], "Print",
 CellChangeTimes->{
  3.645627787672214*^9, 3.6457829693666897`*^9, 3.645786815580871*^9, 
   3.645787274673225*^9, 3.645791355628828*^9, 3.64579438893996*^9, {
   3.645795206609186*^9, 3.6457952291195707`*^9}, 3.645795270882018*^9, 
   3.645801316802544*^9, 3.6458025984526787`*^9, 3.645888822312278*^9, 
   3.646142960804945*^9, 3.646147357415131*^9, 3.646151470291532*^9, 
   3.646151517187827*^9, 3.646221205728528*^9, 3.646300832984207*^9, 
   3.646499726819779*^9, 3.646821291209181*^9, 3.646912160873666*^9, 
   3.6470334812101383`*^9, 3.647252426249449*^9, 3.647263013944933*^9, 
   3.647336133399406*^9, 3.647346949354023*^9, 3.6474437201304607`*^9, 
   3.647515936519013*^9, 3.649346662804734*^9, 3.649409005886476*^9, 
   3.650557857825457*^9, 3.655739786645851*^9, 3.6573017143780813`*^9, 
   3.6586610167031393`*^9, 3.658831813159154*^9, 3.673020282958028*^9, 
   3.673372850602067*^9, 3.6740510712131767`*^9, 3.674115511699749*^9, 
   3.674120007694318*^9, 3.6754347380422*^9, 3.6755221857932*^9, 
   3.675626856832748*^9, 3.675759330985868*^9, 3.67576499042479*^9, 
   3.675767032292131*^9, 3.675771797342269*^9, 3.6757772215540447`*^9, 
   3.675785170505323*^9, 3.675788813789051*^9, 3.675789609694525*^9, 
   3.676976753395453*^9, 3.6772504020056887`*^9, 3.692819905952579*^9, 
   3.693072238934741*^9, 3.700571931213801*^9, 3.7023895747217493`*^9, 
   3.702579256706918*^9, 3.7028951717046967`*^9, 3.704723793339529*^9, 
   3.704724154630837*^9, 3.7480741688753*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"104879eb-97d6-4081-ae8f-57e8ead0dda6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "faces", "*)"}]], "Input",
 CellChangeTimes->{{3.645525050220231*^9, 3.645525050997504*^9}, {
  3.645802795065353*^9, 3.645802798215557*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"cb83b433-ac88-4aef-8d56-585b9dcc031f"],

Cell["\<\
Do f1 & f2 share an edge? Returns the (sorted) edge, or {}.
So determines if f1 & f2 are adjacent.

Note: Assumptions that edges & adjfaces are sorted pairs simplifies.\
\>", "Text",
 CellChangeTimes->{{3.5876766874771976`*^9, 3.58767669382759*^9}, {
  3.587676932725223*^9, 3.587676935310511*^9}, {3.5880233842939463`*^9, 
  3.5880234811214027`*^9}, {3.588060758399602*^9, 3.588060764582789*^9}, {
  3.588060840179935*^9, 3.588060959455077*^9}, {3.58806100037446*^9, 
  3.5880610158134212`*^9}, {3.604593526209601*^9, 3.604593540265007*^9}, {
  3.604593625006014*^9, 3.604593664651691*^9}, {3.6162325797081947`*^9, 
  3.616232590531498*^9}, {3.616233485502633*^9, 3.6162335716921463`*^9}, {
  3.616235394430868*^9, 3.6162354191479683`*^9}, {3.616237221623155*^9, 
  3.61623724538278*^9}, {3.6162593732941504`*^9, 3.616259500515154*^9}, {
  3.6162596136778593`*^9, 3.6162596193876038`*^9}, {3.616259799143382*^9, 
  3.616259813450426*^9}, {3.645525218638762*^9, 3.645525244382509*^9}, {
  3.645526998928666*^9, 3.64552701581595*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ShareEdgeQ", "[", 
     RowBox[{"f1i_", ",", "f2i_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"f1", ",", "f2", ",", "f2r", ",", "i", ",", "j"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f1", "=", 
        RowBox[{
        "faces", "\[LeftDoubleBracket]", "f1i", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"f2", "=", 
        RowBox[{
        "faces", "\[LeftDoubleBracket]", "f2i", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"f2r", "=", 
        RowBox[{"Reverse", "[", "f2", "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"r", "=", "reverse"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "f1", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "f2", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"f1", "\[LeftDoubleBracket]", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}], 
                "\[Equal]", 
                RowBox[{"f2r", "\[LeftDoubleBracket]", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}]}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"Return", "[", 
                RowBox[{"Sort", "[", 
                 RowBox[{"f1", "\[LeftDoubleBracket]", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}], 
                 "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
             RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"f2r", "=", 
              RowBox[{"RotateLeft", "[", "f2r", "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", 
          RowBox[{"(*", "Forj", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"f1", "=", 
           RowBox[{"RotateLeft", "[", "f1", "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", 
       RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ShareEdgeQ", "[", 
        RowBox[{"3", ",", "6"}], "]"}], ",", 
       RowBox[{"ShareEdgeQ", "[", 
        RowBox[{"7", ",", "4"}], "]"}]}], "}"}], "]"}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindAdjFacesEdges", "[", "faces_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nf", ",", "i", ",", "j", ",", "e", ",", 
       RowBox[{"edges", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"adjfaces", "=", 
        RowBox[{"{", "}"}]}], ",", "v", ",", "f"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Find", " ", "edges"}], " ", "&"}], " ", "adjacent", " ", 
       RowBox[{"faces", ":"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nf", "=", 
       RowBox[{"Length", "[", "faces", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "nf"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", 
            RowBox[{"i", "+", "1"}]}], ",", 
           RowBox[{"j", "\[LessEqual]", "nf"}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"e", "=", 
             RowBox[{"ShareEdgeQ", "[", 
              RowBox[{"i", ",", "j"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"debug", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"\"\<{i,j,e}=\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "j", ",", "e"}], "}"}]}], "]"}]}], "]"}],
               ";"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Length", "[", "e", "]"}], ">", "0"}], ")"}], " ", "&&", 
               RowBox[{"(", 
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{"edges", ",", "e"}], "]"}]}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"edges", ",", "e"}], "]"}]}], "\[IndentingNewLine]", 
             "]"}], ";", 
            RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Length", "[", "e", "]"}], ">", "0"}], ")"}], " ", "&&", 
               RowBox[{"(", 
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"i", ",", "j"}], "}"}], ",", "adjfaces"}], 
                  "]"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"adjfaces", ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], 
          RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       RowBox[{"(*", "Forj", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "edges", "]"}], "\[NotEqual]", 
         RowBox[{"Length", "[", "adjfaces", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Error FindAdjFacesEdges: must be ==\>\"", ",", 
           RowBox[{"Length", "[", "edges", "]"}], ",", "\"\<:\>\"", ",", 
           RowBox[{"Length", "[", "adjfaces", "]"}]}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<FindAdjFacesEdges: #edges==#adjfaces:\>\"", ",", "True"}], 
         "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Chk", " ", "Euler"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v", ",", "e", ",", "f"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "#", "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"verts3d", ",", "edges", ",", "faces"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<FindAdjFacesEdges:Euler:{v,e,f}=\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"v", ",", "e", ",", "f"}], "}"}], ",", "\"\<:v-e+f==2:\>\"", 
        ",", 
        RowBox[{
         RowBox[{"v", "-", "e", "+", "f"}], "\[Equal]", "2"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"edges", ",", "adjfaces"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"edges", ",", "adjfaces"}], "}"}], "=", 
     RowBox[{"FindAdjFacesEdges", "[", "faces", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<edges=\>\"", ",", "edges", ",", "\"\<\\nadjfaces=\>\"", ",", 
      "adjfaces"}], "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQvW8zs2r2x1eOCa9PGoFosYhzjiD60TyRKBD9afLS
PBC9+R1fAYjWMX8/B0SXdX8G0/O/Xmf11HztuGn3TzYQ/UOrdDqInuT7E0w3
zYsQ9QLSa/d7SoLoOUklCiD6CMcGPRAdEZFvBqKnJ0dbgmgjnbN2IJrv1voA
sPqOlHoQ/WvGZDCd+uhCO4hmcz00C0SzbHw+D0Qr9YodAJsbp97sC6Tt9OO6
QPSB+W0vQfSbDSfegOgZF/d9BNHbIpo/g+hHr0+u8gPSCfzGq0H0LjFZzYtA
eo9VP5herq/uP0frtWMp0wQwfeHSU9mdca8d5bhkFUC08fTzxiDaqOknmP5X
vMgCRKf3/QXTP9QO2oLofWp6diAaAOO2tVY=
  "],
 CellLabel->
  "In[113]:=",ExpressionUUID->"ea192a46-ea88-4f3c-86bf-6ffc8ccfc839"],

Cell["\<\
Compute angles at each face corner. Store in fangs in same order as face in \
faces.\
\>", "Text",
 CellChangeTimes->{{3.5876766874771976`*^9, 3.58767669382759*^9}, {
   3.587676932725223*^9, 3.587676935310511*^9}, {3.5880233842939463`*^9, 
   3.5880234811214027`*^9}, {3.588060758399602*^9, 3.588060764582789*^9}, {
   3.588060840179935*^9, 3.588060959455077*^9}, {3.58806100037446*^9, 
   3.5880610158134212`*^9}, {3.604593526209601*^9, 3.604593540265007*^9}, {
   3.604593625006014*^9, 3.604593664651691*^9}, {3.6162325797081947`*^9, 
   3.616232590531498*^9}, {3.616233485502633*^9, 3.6162335716921463`*^9}, {
   3.616235394430868*^9, 3.6162354191479683`*^9}, {3.616237221623155*^9, 
   3.61623724538278*^9}, {3.6162593732941504`*^9, 3.616259500515154*^9}, 
   3.6455247252460117`*^9, {3.645524763944202*^9, 3.6455247733749533`*^9}, {
   3.6455250231649523`*^9, 3.645525024931642*^9}, {3.6455259124272003`*^9, 
   3.6455259191926823`*^9}, 3.645526068817835*^9, {3.645526121212358*^9, 
   3.645526147884214*^9}, {3.645529789509309*^9, 3.645529798516243*^9}, {
   3.645530259476911*^9, 3.645530280220807*^9}, {3.645530423086432*^9, 
   3.6455304341884193`*^9}, {3.6455314005105333`*^9, 3.645531452991638*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FaceAngsCalc", "[", "fi_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "a", ",", "b", ",", "c", ",", "angs"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "=", 
       RowBox[{
       "faces", "\[LeftDoubleBracket]", "fi", "\[RightDoubleBracket]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], "=", 
       RowBox[{
       "verts3d", "\[LeftDoubleBracket]", "f", "\[RightDoubleBracket]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"angs", "=", 
       RowBox[{"TriAngles", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "So", " ", "indexed", " ", "the", " ", "same", " ", "as", " ", 
        RowBox[{"faces", ":"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "angs", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6772555169639053`*^9, 3.677255561378347*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"5684cea0-3ca3-4c64-8729-ee9f70dcc4f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindAngles", "[", "faces_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nf", ",", "fi", ",", "f", ",", "a", ",", "b", ",", "c", ",", "angs", 
        ",", 
        RowBox[{"fangs", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nf", "=", 
        RowBox[{"Length", "[", "faces", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"fi", "=", "1"}], ",", 
         RowBox[{"fi", "\[LessEqual]", "nf"}], ",", 
         RowBox[{"fi", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"angs", "=", 
           RowBox[{"FaceAngsCalc", "[", "fi", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"fangs", ",", "angs"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", 
       RowBox[{"(*", "Forfi", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "fangs", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"fangs", "=", 
     RowBox[{"FindAngles", "[", "faces", "]"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"Print", "[", 
     RowBox[{"fangs", " ", "RadDeg"}], "]"}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FaceAngleAtVertex", "[", 
    RowBox[{"vi_", ",", "fi_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "i", ",", "ang"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"f", "=", 
       RowBox[{
       "faces", "\[LeftDoubleBracket]", "fi", "\[RightDoubleBracket]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"f", ",", "vi"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Error in FaceAngleAtVertex:vi not in f:{vi,f}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"vi", ",", "f"}], "}"}]}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ang", "=", 
       RowBox[{"-", "1"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"Neg", " ", "to", " ", 
        RowBox[{"flag", " ", "!"}], "found"}], "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "f", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"vi", "\[Equal]", 
            RowBox[{
            "f", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{
            RowBox[{"ang", "=", 
             RowBox[{
              RowBox[{
              "fangs", "\[LeftDoubleBracket]", "fi", 
               "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]}], ";", " ", 
            RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         ";"}]}], 
       RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ang", "<", "0"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Error in FaceAngleAtVertex:ang<0:\>\"", ",", "ang"}], 
          "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "ang", "]"}]}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FaceAngleAtVertex", "[", 
         RowBox[{"3", ",", "1"}], "]"}], ",", 
        RowBox[{"FaceAngleAtVertex", "[", 
         RowBox[{"7", ",", "1"}], "]"}]}], "}"}], "RadDeg"}], "]"}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.64553151206251*^9, 3.645531655651084*^9}, {
  3.6455318378294897`*^9, 3.645532012181774*^9}, {3.645532130981496*^9, 
  3.6455321334196987`*^9}, {3.6455323073257313`*^9, 3.6455325128388777`*^9}, {
  3.645532547842955*^9, 3.64553267347126*^9}, {3.645532745220277*^9, 
  3.645533051444684*^9}, {3.645533098850492*^9, 3.645533103599883*^9}, {
  3.6456243823061237`*^9, 3.6456244007774467`*^9}, {3.645791607345008*^9, 
  3.645791627295854*^9}, {3.6458028839981327`*^9, 3.645802887148671*^9}, {
  3.64621578669392*^9, 3.646215790490172*^9}, {3.647263805972239*^9, 
  3.6472638145548687`*^9}, {3.6770744729202337`*^9, 3.677074507046728*^9}, {
  3.677255568613595*^9, 3.677255582696917*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"6c3c0996-2c8a-4821-aef6-a801bc6b697b"],

Cell["", "Text",
 CellChangeTimes->{{3.5876766874771976`*^9, 3.58767669382759*^9}, {
   3.587676932725223*^9, 3.587676935310511*^9}, {3.5880233842939463`*^9, 
   3.5880234811214027`*^9}, {3.588060758399602*^9, 3.588060764582789*^9}, {
   3.588060840179935*^9, 3.588060959455077*^9}, {3.58806100037446*^9, 
   3.5880610158134212`*^9}, {3.604593526209601*^9, 3.604593540265007*^9}, {
   3.604593625006014*^9, 3.604593664651691*^9}, {3.6162325797081947`*^9, 
   3.616232590531498*^9}, {3.616233485502633*^9, 3.6162335716921463`*^9}, {
   3.616235394430868*^9, 3.6162354191479683`*^9}, {3.616237221623155*^9, 
   3.61623724538278*^9}, {3.6162593732941504`*^9, 3.616259500515154*^9}, 
   3.6455247252460117`*^9, {3.645524763944202*^9, 3.6455247733749533`*^9}, {
   3.6455250231649523`*^9, 3.645525024931642*^9}, {3.6455259124272003`*^9, 
   3.6455259191926823`*^9}, 3.645526068817835*^9, {3.645526121212358*^9, 
   3.645526147884214*^9}, {3.645529789509309*^9, 3.645529798516243*^9}, {
   3.645530259476911*^9, 3.645530280220807*^9}, {3.645530423086432*^9, 
   3.6455304341884193`*^9}, {3.6455314005105333`*^9, 3.64553141032584*^9}, 
   3.675776453357476*^9},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[TextData[{
 "Create vadjccws. Completely new code. 24Jun16.\n",
 StyleBox["vadjccws ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ": list of {",
 StyleBox["v",
  FontSlant->"Italic"],
 ", ",
 StyleBox["vadj",
  FontSlant->"Italic"],
 "}, ",
 StyleBox["vadj",
  FontSlant->"Italic"],
 " = list of face indices (into faces), in ccw order. The most important \
struct. Circular list.\nNow computed entirely combinatorially. Several \
low-level funcs."
}], "Text",
 CellChangeTimes->{{3.673032085554555*^9, 3.6730321362864323`*^9}, 
   3.6730322058867493`*^9, 3.675771703788644*^9, {3.6757764693545933`*^9, 
   3.6757765056510973`*^9}},
 Background->RGBColor[1, 0.9, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Rotate", " ", "list", " ", "until", " ", "1", "st", " ", "is", " ", 
    "elem"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"RotList1st", "[", 
      RowBox[{"list_", ",", "elem_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"i", "=", "0"}], ",", "list1"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"list", ",", "elem"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Err RotList1st:\>\"", ",", "list", ",", "elem"}], 
            "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"list1", "=", "list"}], ";", "\[IndentingNewLine]", 
        RowBox[{"n", "=", 
         RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "\[LessEqual]", "n"}], ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
             "list1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "\[NotEqual]", "elem"}], ")"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"list1", "=", 
            RowBox[{"RotateLeft", "[", "list1", "]"}]}], ";", 
           RowBox[{"i", "++"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        RowBox[{"(*", "While", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "list1", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"RotList1st", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
      "2"}], "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RotListAll", "[", 
      RowBox[{"lists_", ",", "elem_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"i", "=", "0"}], ",", "lists1"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"Length", "[", "lists", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"lists1", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RotList1st", "[", 
             RowBox[{"#", ",", "elem"}], "]"}], "&"}], ",", "lists"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "lists1", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"vadjf1st", "=", 
     RowBox[{"RotListAll", "[", 
      RowBox[{"vadjf", ",", "vi"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SortListsCcw", "[", 
      RowBox[{"lists_", ",", "inds_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f1", ",", "f2", ",", "n", ",", "i", ",", "j", ",", "vi", ",", 
         RowBox[{"listccw", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"indsccw", "=", 
          RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"Length", "[", "lists", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"listccw", "=", 
         RowBox[{"{", 
          RowBox[{
          "lists", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"indsccw", "=", 
         RowBox[{"{", 
          RowBox[{
          "inds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"n", "-", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"f1", "=", 
            RowBox[{"listccw", "\[LeftDoubleBracket]", 
             RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<i=\>\"", ",", "i", ",", "\"\<f1=\>\"", ",", "f1"}],
               "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", "1"}], ",", 
             RowBox[{"j", "\[LessEqual]", "n"}], ",", 
             RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"j", "\[Equal]", "i"}], ",", 
                 RowBox[{"Continue", "[", "]"}]}], "]"}], ";"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"f2", "=", 
               RowBox[{
               "lists", "\[LeftDoubleBracket]", "j", 
                "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<  j=\>\"", ",", "j", ",", "\"\<f2=\>\"", ",", "f2"}], 
                 "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "f1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  "\[NotEqual]", 
                 RowBox[{
                 "f2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], ",", 
                RowBox[{"(*", 
                 RowBox[{"Assume", " ", "rot", " ", "already"}], "*)"}], 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{"\"\<Err SortListsCcw:{f1,f2}=\>\"", ",", 
                   RowBox[{"{", 
                    RowBox[{"f1", ",", "f2"}], "}"}]}], "]"}], ";", 
                 RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"f1", "\[LeftDoubleBracket]", 
                  RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "\[Equal]", 
                 RowBox[{
                 "f2", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"listccw", ",", "f2"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"indsccw", ",", 
                   RowBox[{
                   "inds", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         RowBox[{"(*", "Forj", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
        RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "listccw", "]"}], "\[NotEqual]", 
           RowBox[{"Length", "[", "lists", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Err SortListsCcw:{lists,listccw}=\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"lists", ",", "listccw"}], "}"}]}], "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"listccw", ",", "indsccw"}], "}"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"SortListsCcw", "[", 
     RowBox[{"vadjf1st", ",", "vadj"}], "]"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6757721003973722`*^9, 3.675772325705017*^9}, {
   3.675772358012689*^9, 3.675772422422772*^9}, 3.6757730007538977`*^9, 
   3.67577515455581*^9, {3.675776535347611*^9, 3.675776560331822*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"419d3137-a9c8-4fe3-9fb2-4d55b3accbbb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CreateVadj1", "[", "vi_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"vadj", "=", 
        RowBox[{"{", "}"}]}], ",", "bpick", ",", "vadjf", ",", "vadjf1st", 
       ",", "facesccw"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bpick", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"#", ",", "vi"}], "]"}], "&"}], ",", "faces"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"vadj", ":", 
         RowBox[{
          StyleBox["inds",
           FontSlant->"Italic"], " ", "of", " ", "incident", " ", "faces"}]}],
         ",", 
        RowBox[{"unsorted", ":"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"vadj", "=", 
       RowBox[{"Pick", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "faces", "]"}], "]"}], ",", "bpick"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"vadj", ":", 
         RowBox[{"faces", " ", "of", " ", "incident", " ", "vi"}]}], ",", 
        RowBox[{"unsorted", ":"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"vadjf", "=", 
       RowBox[{"Pick", "[", 
        RowBox[{"faces", ",", "bpick"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", 
       RowBox[{"vadjf1st", ":", " ", 
        RowBox[{"faces", " ", "rot", " ", "vi", " ", "1", "st"}], ":"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"vadjf1st", "=", 
       RowBox[{"RotListAll", "[", 
        RowBox[{"vadjf", ",", "vi"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Overwrite", " ", "vadj", " ", "with", " ", 
        RowBox[{"sorted", ":"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"facesccw", ",", "vadj"}], "}"}], "=", 
       RowBox[{"SortListsCcw", "[", 
        RowBox[{"vadjf1st", ",", "vadj"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"vi", ",", "vadj"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vi", "=", "19"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"CreateVadj1", "[", "vi", "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "vadjccws", "\[LeftDoubleBracket]", "vi", "\[RightDoubleBracket]"}], 
     "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.675775676952774*^9, 3.6757760232580853`*^9}, {
   3.675776054099169*^9, 3.675776153474799*^9}, 3.675776581338663*^9},
 CellLabel->
  "In[121]:=",ExpressionUUID->"a87ce098-277e-4940-ae64-ba14300d11c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CreateVadjs", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "nv", ",", 
       RowBox[{"vadjccws", "=", 
        RowBox[{"{", "}"}]}], ",", "vi", ",", "vadj"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nv", "=", 
       RowBox[{"Length", "[", "verts3d", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "nv"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"vi", ",", "vadj"}], "}"}], "=", 
          RowBox[{"CreateVadj1", "[", "i", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vadjccws", ",", 
           RowBox[{"{", 
            RowBox[{"vi", ",", "vadj"}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "vadjccws", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"vadjccws", "=", 
    RowBox[{"CreateVadjs", "[", "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6455384055930758`*^9, 3.645538598378017*^9}, {
  3.64588884620436*^9, 3.645888848889061*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"ed2bea40-8dcc-4d0e-bc8a-7f99a3003996"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CurvVertex", "[", "vi_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vadj", ",", "i", ",", "n", ",", "\[Theta]", ",", "\[Omega]"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "vadjccws", " ", "indexed", " ", "the", " ", "same", " ", "as", " ", 
        RowBox[{"verts3d", ":"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vadj", "=", 
        RowBox[{
         RowBox[{
         "vadjccws", "\[LeftDoubleBracket]", "vi", "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Theta]", "=", "0."}], ";", 
       RowBox[{"(*", 
        RowBox[{"total", " ", "face", " ", "angle"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "vadj", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Theta]", "+=", 
           RowBox[{"FaceAngleAtVertex", "[", 
            RowBox[{"vi", ",", 
             RowBox[{
             "vadj", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
             "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Omega]", "=", 
        RowBox[{
         RowBox[{"2", "\[Pi]"}], "-", "\[Theta]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"debug1", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<CurvVertex:{\[Theta],\[Omega]}=\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Theta]", ",", "\[Omega]"}], "}"}], " ", "RadDeg"}]}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "\[Omega]", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"debug", "=", "False"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Omega]bot", "=", 
     RowBox[{"CurvVertex", "[", 
      RowBox[{"zinds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Omega]top", "=", 
     RowBox[{"CurvVertex", "[", 
      RowBox[{"zinds", "\[LeftDoubleBracket]", 
       RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<{\[Omega]bot,\[Omega]top}=\>\"", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]bot", ",", "\[Omega]top"}], "}"}], " ", "RadDeg"}]}],
      "]"}], ";"}], "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AnglesAtVertex", "[", "vi_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "vadj", ",", "i", ",", "n", ",", "\[Theta]", ",", "\[Omega]", ",", 
       RowBox[{"angs", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "vadjccws", " ", "indexed", " ", "the", " ", "same", " ", "as", " ", 
       RowBox[{"verts3d", ":"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vadj", "=", 
       RowBox[{
        RowBox[{
        "vadjccws", "\[LeftDoubleBracket]", "vi", "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "vadj", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"angs", ",", 
           RowBox[{"FaceAngleAtVertex", "[", 
            RowBox[{"vi", ",", 
             RowBox[{
             "vadj", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
             "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "angs", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.645625311990943*^9, 3.6456253530759087`*^9}, {
   3.645626465735313*^9, 3.645626521025738*^9}, {3.645808536563574*^9, 
   3.6458085397934647`*^9}, 3.658765085304634*^9, {3.6769964543744*^9, 
   3.676996505257268*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"ee11abfc-b4dc-4378-ad55-8164bf7dc476"],

Cell[TextData[{
 "Global ",
 StyleBox["verts3d",
  FontSlant->"Italic"],
 ".\nIsVertexQ[p]: If ",
 StyleBox["p",
  FontSlant->"Italic"],
 " coincides with vertex, return index; else 0=False.\nNote: 0 rather than \
{}, because not a set.\nIsOnEdgeQ[p]: returns ei={vi1,vi2} if on that edge, \
else {}.\nIsInFaceQ[p]: returns ",
 StyleBox["fi",
  FontSlant->"Italic"],
 " if strictly inside that face, else 0.\nShould be tested in that order."
}], "Text",
 CellChangeTimes->{{3.5876766874771976`*^9, 3.58767669382759*^9}, {
   3.587676932725223*^9, 3.587676935310511*^9}, {3.5880233842939463`*^9, 
   3.5880234811214027`*^9}, {3.588060758399602*^9, 3.588060764582789*^9}, {
   3.588060840179935*^9, 3.588060959455077*^9}, {3.58806100037446*^9, 
   3.5880610158134212`*^9}, {3.604593526209601*^9, 3.604593540265007*^9}, {
   3.6221406095725393`*^9, 3.622140627505732*^9}, {3.622146240446817*^9, 
   3.622146243238419*^9}, {3.622148977142918*^9, 3.622148987205772*^9}, 
   3.628772908678434*^9, {3.628943316206661*^9, 3.62894333333554*^9}, {
   3.629284407690194*^9, 3.629284413669311*^9}, {3.645268840933076*^9, 
   3.645268896871121*^9}, {3.6452689736047993`*^9, 3.645268976348135*^9}, {
   3.645351571817296*^9, 3.645351603289547*^9}, {3.645355062626232*^9, 
   3.6453550701280327`*^9}, {3.6453551003230047`*^9, 3.645355150892003*^9}, {
   3.645356714988256*^9, 3.645356724275508*^9}, {3.645356768917329*^9, 
   3.645356769341332*^9}, {3.645358415177697*^9, 3.645358429088751*^9}, {
   3.6453589321381197`*^9, 3.6453589410824842`*^9}, {3.645363874100464*^9, 
   3.645363894555484*^9}, {3.645364159890192*^9, 3.6453641634182367`*^9}, {
   3.645544838850033*^9, 3.6455448789386597`*^9}, {3.645610163319182*^9, 
   3.645610206482841*^9}, {3.6456102499704514`*^9, 3.645610272703144*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"IsVertex1Q", "[", 
    RowBox[{"vi_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FuzzEqVec", "[", 
        RowBox[{"p", ",", 
         RowBox[{
         "verts3d", "\[LeftDoubleBracket]", "vi", "\[RightDoubleBracket]"}]}],
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "True", "]"}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsVertexQ", "[", "p_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "vi", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"vi", "=", "1"}], ",", 
         RowBox[{"vi", "\[LessEqual]", 
          RowBox[{"Length", "[", "verts3d", "]"}]}], ",", 
         RowBox[{"vi", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"IsVertex1Q", "[", 
            RowBox[{"vi", ",", "p"}], "]"}], ",", 
           RowBox[{"Return", "[", "vi", "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ";", 
       RowBox[{"(*", "For", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "0", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"NB", ":", " ", "ei"}], "=", 
    RowBox[{"{", 
     RowBox[{"vi1", ",", "vi2"}], "}"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IsOnEdge1Q", "[", 
    RowBox[{"ei_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e", ",", "area"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"e", "=", 
       RowBox[{
       "verts3d", "\[LeftDoubleBracket]", "ei", "\[RightDoubleBracket]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Let", " ", "me", " ", "assume", " ", "p", " ", "is", " ", "on", " ", 
        "the", " ", "surface", " ", 
        RowBox[{"(", 
         RowBox[{"and", " ", "not", " ", "in", " ", 
          RowBox[{"space", "!"}]}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"area", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"TriArea3d", "[", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{
           "e", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "e", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{"debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<IsOnEdge1Q:area=\>\"", ",", "area"}], "]"}]}], "]"}], 
        ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"FuzzZero", "[", "area", "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsOnEdgeQ", "[", "p_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "e", ",", "ei", ",", "area"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "edges", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ei", "=", 
           RowBox[{
           "edges", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"IsOnEdge1Q", "[", 
             RowBox[{"ei", ",", "p"}], "]"}], ",", 
            RowBox[{"Return", "[", "ei", "]"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", 
       RowBox[{"(*", "For", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IsInFace1Q", "[", 
    RowBox[{"fi_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "f", ",", "fpts"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "=", 
       RowBox[{
       "faces", "\[LeftDoubleBracket]", "fi", "\[RightDoubleBracket]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"fpts", "=", 
       RowBox[{
       "verts3d", "\[LeftDoubleBracket]", "f", "\[RightDoubleBracket]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"debug1", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<IsInFace1Q:fi=\>\"", ",", "fi"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Now", " ", "implemented", " ", "in", " ", 
        RowBox[{"Triangle", ".", "Angles", ".", 
         RowBox[{"nb", ":"}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Returns", " ", "Boolean"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"InsideTriQ", "[", 
        RowBox[{"p", ",", "fpts"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsInFaceQ", "[", "p_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nf", ",", "i", ",", "fi", ",", "fpts"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nf", "=", 
        RowBox[{"Length", "[", "faces", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "nf"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"fi", "=", "i"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Returns", " ", "face", " ", "index"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"IsInFace1Q", "[", 
             RowBox[{"fi", ",", "p"}], "]"}], ",", 
            RowBox[{"Return", "[", "fi", "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", 
       RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "0", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"OnFace", " ", "includes", " ", "boundary"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsOnFace1Q", "[", 
     RowBox[{"fi_", ",", "p_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "f", ",", "fpts", ",", "i", ",", "i1", ",", "n", ",", "vi", 
        ",", "ei"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{"debug1", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<IsOnFace1Q:fi=\>\"", ",", "fi"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"IsInFace1Q", "[", 
          RowBox[{"fi", ",", "p"}], "]"}], ",", 
         RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{
        "faces", "\[LeftDoubleBracket]", "fi", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Chk", " ", "if", " ", "on", " ", "edge", " ", "or", " ", "at", " ", 
         RowBox[{"vertex", ":"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "n"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"i1", "=", 
           RowBox[{"mod", "[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", "n"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"vi", "=", 
           RowBox[{
           "f", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"IsVertex1Q", "[", 
             RowBox[{"vi", ",", "p"}], "]"}], ",", 
            RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ei", "=", 
           RowBox[{"Sort", "[", 
            RowBox[{"f", "\[LeftDoubleBracket]", 
             RowBox[{"{", 
              RowBox[{"i", ",", "i1"}], "}"}], "\[RightDoubleBracket]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"IsOnEdge1Q", "[", 
             RowBox[{"ei", ",", "p"}], "]"}], ",", 
            RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Returns", " ", "Boolean"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "False", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FacesIncidVert", "[", "vi_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "vadj", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vadj", "=", 
        RowBox[{
        "vadjccws", "\[LeftDoubleBracket]", "vi", "\[RightDoubleBracket]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "vadj", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[NotEqual]", "vi"}], ",", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<Error in FacesIncidVert\>\"", "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"Return", "[", 
        RowBox[{
        "vadj", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OnFaces", "[", "p_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vi", ",", "flist", ",", "ei", ",", "eind", ",", "fi"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"debug1", ",", 
        RowBox[{"Print", "[", "\"\<==>OnFaces\>\"", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vi", "=", 
       RowBox[{"IsVertexQ", "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"vi", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"flist", "=", 
          RowBox[{"FacesIncidVert", "[", "vi", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "flist", "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ";", 
      RowBox[{"(*", "Ifvi", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ei", "=", 
       RowBox[{"IsOnEdgeQ", "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ei", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eind", "=", 
          RowBox[{"Position", "[", 
           RowBox[{"edges", ",", "ei"}], "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"eind", "=", 
          RowBox[{"First", "[", 
           RowBox[{"First", "[", "eind", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "edges", " ", "are", " ", "indexed", " ", "the", " ", "same", " ", 
           "as", " ", "adjfaces"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"flist", "=", 
          RowBox[{
          "adjfaces", "\[LeftDoubleBracket]", "eind", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "flist", "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ";", 
      RowBox[{"(*", "Ifei", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"fi", "=", 
       RowBox[{"IsInFaceQ", "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"fi", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "fi", "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Iffi", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Error OnFaces:p not anywhere,p=\>\"", ",", "p"}], "]"}], 
      ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6453637486454678`*^9, 3.6453638587085333`*^9}, 
   3.64554291381369*^9, {3.645544044950199*^9, 3.645544081173163*^9}, {
   3.645544220274395*^9, 3.64554427715882*^9}, {3.645544312621688*^9, 
   3.645544355933276*^9}, 3.6455443999017067`*^9, {3.6455444376942463`*^9, 
   3.645544458625204*^9}, {3.645544638597022*^9, 3.6455447602907953`*^9}, {
   3.645544820223597*^9, 3.645544827342375*^9}, {3.645545121869588*^9, 
   3.6455451369480343`*^9}, {3.645546533103381*^9, 3.645546570809616*^9}, {
   3.64554660944604*^9, 3.6455466450992603`*^9}, {3.645546686603635*^9, 
   3.645546690369995*^9}, {3.645546745576105*^9, 3.645546774999318*^9}, {
   3.645546878869326*^9, 3.645546897403563*^9}, {3.645547049784219*^9, 
   3.645547105524832*^9}, {3.64555313176685*^9, 3.645553139427709*^9}, {
   3.6456082621963778`*^9, 3.645608270367874*^9}, {3.6456102811071*^9, 
   3.64561029919984*^9}, {3.64562202227744*^9, 3.645622095797114*^9}, {
   3.645626273406888*^9, 3.6456263031475363`*^9}, {3.645782824790431*^9, 
   3.645782889589416*^9}, {3.6457829228723392`*^9, 3.64578293003092*^9}, 
   3.6457849471425056`*^9, {3.646150214190558*^9, 3.646150444177326*^9}, {
   3.646150476388485*^9, 3.646150625490806*^9}, {3.646150665121046*^9, 
   3.6461506839284277`*^9}, {3.646150724417015*^9, 3.646150895753563*^9}, 
   3.646151235661044*^9, {3.6461515122748947`*^9, 3.646151513025586*^9}, {
   3.646215848911924*^9, 3.646215875321216*^9}, {3.646215923752143*^9, 
   3.646215928683676*^9}, {3.646216026677458*^9, 3.6462161504303293`*^9}, {
   3.646216336143634*^9, 3.646216340503335*^9}, {3.646216853987911*^9, 
   3.646216866343967*^9}, {3.646216907113598*^9, 3.646216927702034*^9}, {
   3.646216959879855*^9, 3.646216985100299*^9}, {3.646217040913919*^9, 
   3.646217069432987*^9}, {3.64621711953703*^9, 3.6462172117782507`*^9}, {
   3.646217329435142*^9, 3.646217368198551*^9}, {3.646217431205558*^9, 
   3.646217465066038*^9}, {3.6462175635907087`*^9, 3.646217655450654*^9}, {
   3.646217692803722*^9, 3.646217786097056*^9}, {3.646223734137368*^9, 
   3.6462237492728786`*^9}, {3.646224267236464*^9, 3.646224304974493*^9}, {
   3.649423938556967*^9, 3.6494239573882437`*^9}, {3.649424059749407*^9, 
   3.649424104276688*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"bb0ea709-9239-4a2b-818e-cc1dbfb6d72d"],

Cell["\<\
Now to the crucial computation using all these DS: the angle at a G vertex.\
\>", "Text",
 CellChangeTimes->{{3.616277925493144*^9, 3.616277954026394*^9}, {
   3.616278008692774*^9, 3.6162780139063*^9}, 3.645542933445702*^9, {
   3.6455431046209717`*^9, 3.645543122050861*^9}, 3.692891115084791*^9},
 Background->RGBColor[0.87, 0.94, 1]],

Cell["(Need to rewrite curv comps, using fangs now.)", "Text",
 CellChangeTimes->{{3.6045924160858583`*^9, 3.6045924271812363`*^9}, {
   3.6161754139452133`*^9, 3.616175497432034*^9}, {3.616175586776231*^9, 
   3.616175598760043*^9}, {3.616276272127399*^9, 3.6162763590569563`*^9}, {
   3.6162777704309053`*^9, 3.616277816002232*^9}, 3.616336913686283*^9, {
   3.616336954341989*^9, 3.616337004253396*^9}, {3.616494876478307*^9, 
   3.6164948818535633`*^9}, {3.616494915512536*^9, 3.616494954410981*^9}, {
   3.616497147768772*^9, 3.616497181766472*^9}, {3.616497421598796*^9, 
   3.616497472986434*^9}, {3.616502337737956*^9, 3.616502367903183*^9}, {
   3.616502458904418*^9, 3.616502505743165*^9}, {3.616502654975054*^9, 
   3.616502662591063*^9}, {3.616502796241571*^9, 3.616502821087019*^9}, {
   3.61651346410536*^9, 3.6165135037212887`*^9}, 3.645542935048794*^9, {
   3.64554378675107*^9, 3.6455438003413553`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell["Realized I need a face-normal function.", "Text",
 CellChangeTimes->{{3.6045924160858583`*^9, 3.6045924271812363`*^9}, {
   3.6161754139452133`*^9, 3.616175497432034*^9}, {3.616175586776231*^9, 
   3.616175598760043*^9}, {3.616276272127399*^9, 3.6162763590569563`*^9}, {
   3.6162777704309053`*^9, 3.616277816002232*^9}, 3.616336913686283*^9, {
   3.616336954341989*^9, 3.616337004253396*^9}, {3.616494876478307*^9, 
   3.6164948818535633`*^9}, {3.616494915512536*^9, 3.616494954410981*^9}, {
   3.616497147768772*^9, 3.616497181766472*^9}, {3.616497421598796*^9, 
   3.616497472986434*^9}, {3.616502337737956*^9, 3.616502367903183*^9}, {
   3.616502458904418*^9, 3.616502505743165*^9}, {3.616502654975054*^9, 
   3.616502662591063*^9}, {3.616502796241571*^9, 3.616502821087019*^9}, {
   3.61651346410536*^9, 3.6165135037212887`*^9}, 3.645542935048794*^9, {
   3.64554378675107*^9, 3.6455438003413553`*^9}, {3.645546113541058*^9, 
   3.645546122202795*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FaceNormal", "[", "fi_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nvec", ",", "f", ",", "fpts"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "=", 
       RowBox[{
       "faces", "\[LeftDoubleBracket]", "fi", "\[RightDoubleBracket]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"fpts", "=", 
       RowBox[{
       "verts3d", "\[LeftDoubleBracket]", "f", "\[RightDoubleBracket]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"nvec", "=", 
       RowBox[{
        RowBox[{"Normalize", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "fpts", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "-", 
            RowBox[{
            "fpts", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ")"}], "\[Cross]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "fpts", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "-", 
            RowBox[{
            "fpts", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ")"}]}], "]"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nvec", "=", 
       RowBox[{"FuzzComplex", "[", "nvec", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FuzzEqVec", "[", 
         RowBox[{"nvec", ",", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "0.", ",", "0."}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Error FaceNormal: {fi,nvec}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"fi", ",", "nvec"}], "}"}]}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "nvec", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.645546245210702*^9, 3.645546349612912*^9}, {
  3.64560830177595*^9, 3.645608349935089*^9}, {3.674115330386429*^9, 
  3.674115336577888*^9}, {3.6741216094465637`*^9, 3.674121683554558*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"3338f2bb-b221-405f-b52a-062f7a61e1e8"],

Cell[TextData[{
 "{p1,p2,p3}: 3d points on surface. Unusual input, but the easiest to manage.\
\n(Assume all pts on surface.)\nThe calc will differ depending on whether p2 \
is a vertex, on an edge, or in a face.\nThree separate funcs, which can be \
called individually in case the situation is known already.\n\nAdd ",
 StyleBox["code",
  FontSlant->"Italic"],
 ": \[OpenCurlyDoubleQuote]v\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]e\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]f\
\[CloseCurlyDoubleQuote]. \[OpenCurlyDoubleQuote]f\[CloseCurlyDoubleQuote] \
now means incl bdry, but p2 not @vertex."
}], "Text",
 CellChangeTimes->{{3.6045924160858583`*^9, 3.6045924271812363`*^9}, {
   3.6161754139452133`*^9, 3.616175497432034*^9}, {3.616175586776231*^9, 
   3.616175598760043*^9}, {3.616276272127399*^9, 3.6162763590569563`*^9}, {
   3.6162777704309053`*^9, 3.616277816002232*^9}, 3.616336913686283*^9, {
   3.616336954341989*^9, 3.616337004253396*^9}, {3.616494876478307*^9, 
   3.6164948818535633`*^9}, {3.616494915512536*^9, 3.616494954410981*^9}, {
   3.616497147768772*^9, 3.616497181766472*^9}, {3.616497421598796*^9, 
   3.616497472986434*^9}, {3.616502337737956*^9, 3.616502367903183*^9}, {
   3.616502458904418*^9, 3.616502505743165*^9}, {3.616502654975054*^9, 
   3.616502662591063*^9}, {3.616502796241571*^9, 3.616502821087019*^9}, {
   3.61651346410536*^9, 3.6165135037212887`*^9}, 3.645542935048794*^9, {
   3.64554378675107*^9, 3.6455438003413553`*^9}, {3.645543991984983*^9, 
   3.645544022149996*^9}, {3.645545025734125*^9, 3.64554504398942*^9}, {
   3.645545219927693*^9, 3.645545241167192*^9}, {3.645608678511454*^9, 
   3.645608705275404*^9}, {3.6457190964939203`*^9, 3.645719098182578*^9}, {
   3.6462180935467443`*^9, 3.646218108264599*^9}, {3.646218486922414*^9, 
   3.646218499449905*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[TextData[{
 "17Jul15. Changing logic. If all three are on the same face (incl bdry), \
then handle that separately, because easier. So inefficient, b/c if not all \
on same face, then repeat calcs. But cleaner, I think.\n1st handle p2 @vertex \
(b/c curv there)\nThen all three on ",
 StyleBox["fi",
  FontSlant->"Italic"],
 " (then zero curv @p2)\nThen other cases.\n(Ugh!)"
}], "Text",
 CellChangeTimes->{{3.6045924160858583`*^9, 3.6045924271812363`*^9}, {
   3.6161754139452133`*^9, 3.616175497432034*^9}, {3.616175586776231*^9, 
   3.616175598760043*^9}, {3.616276272127399*^9, 3.6162763590569563`*^9}, {
   3.6162777704309053`*^9, 3.616277816002232*^9}, 3.616336913686283*^9, {
   3.616336954341989*^9, 3.616337004253396*^9}, {3.616494876478307*^9, 
   3.6164948818535633`*^9}, {3.616494915512536*^9, 3.616494954410981*^9}, {
   3.616497147768772*^9, 3.616497181766472*^9}, {3.616497421598796*^9, 
   3.616497472986434*^9}, {3.616502337737956*^9, 3.616502367903183*^9}, {
   3.616502458904418*^9, 3.616502505743165*^9}, {3.616502654975054*^9, 
   3.616502662591063*^9}, {3.616502796241571*^9, 3.616502821087019*^9}, {
   3.61651346410536*^9, 3.6165135037212887`*^9}, 3.645542935048794*^9, {
   3.64554378675107*^9, 3.6455438003413553`*^9}, {3.645543991984983*^9, 
   3.645544022149996*^9}, {3.645545025734125*^9, 3.64554504398942*^9}, {
   3.645545219927693*^9, 3.645545241167192*^9}, {3.645608678511454*^9, 
   3.645608705275404*^9}, {3.6457190964939203`*^9, 3.645719098182578*^9}, {
   3.646216727182147*^9, 3.646216813552746*^9}, {3.6462181151282263`*^9, 
   3.646218145719112*^9}, {3.6462184344443502`*^9, 3.6462184632908897`*^9}, {
   3.646218506729747*^9, 3.6462185090102377`*^9}, {3.646218910193429*^9, 
   3.646218934408527*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[{
 "28Jul15. Need to return vi/ei/fi=vefi index along with ",
 StyleBox["code, ",
  FontSlant->"Italic"],
 "and change code elsewhere accordingly."
}], "Text",
 CellChangeTimes->{{3.6045924160858583`*^9, 3.6045924271812363`*^9}, {
   3.6161754139452133`*^9, 3.616175497432034*^9}, {3.616175586776231*^9, 
   3.616175598760043*^9}, {3.616276272127399*^9, 3.6162763590569563`*^9}, {
   3.6162777704309053`*^9, 3.616277816002232*^9}, 3.616336913686283*^9, {
   3.616336954341989*^9, 3.616337004253396*^9}, {3.616494876478307*^9, 
   3.6164948818535633`*^9}, {3.616494915512536*^9, 3.616494954410981*^9}, {
   3.616497147768772*^9, 3.616497181766472*^9}, {3.616497421598796*^9, 
   3.616497472986434*^9}, {3.616502337737956*^9, 3.616502367903183*^9}, {
   3.616502458904418*^9, 3.616502505743165*^9}, {3.616502654975054*^9, 
   3.616502662591063*^9}, {3.616502796241571*^9, 3.616502821087019*^9}, {
   3.61651346410536*^9, 3.6165135037212887`*^9}, 3.645542935048794*^9, {
   3.64554378675107*^9, 3.6455438003413553`*^9}, {3.645543991984983*^9, 
   3.645544022149996*^9}, {3.645545025734125*^9, 3.64554504398942*^9}, {
   3.645545219927693*^9, 3.645545241167192*^9}, {3.645608678511454*^9, 
   3.645608705275404*^9}, {3.6457190964939203`*^9, 3.645719098182578*^9}, {
   3.646216727182147*^9, 3.646216813552746*^9}, {3.6462181151282263`*^9, 
   3.646218145719112*^9}, {3.6462184344443502`*^9, 3.6462184632908897`*^9}, {
   3.646218506729747*^9, 3.6462185090102377`*^9}, {3.646218910193429*^9, 
   3.646218934408527*^9}, {3.6470849026421537`*^9, 3.6470849229751*^9}, {
   3.647085070399468*^9, 3.6470850794430532`*^9}, {3.647115989238475*^9, 
   3.6471159914784517`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PathAng", "[", 
    RowBox[{"{", 
     RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "}"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Theta]", ",", "\[Rho]", ",", "\[Lambda]", ",", "vi", ",", "ei", ",", 
       "fi", ",", "code", ",", "flist", ",", "f1list", ",", "f2list", ",", 
       "f3list", ",", "vefi"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f1list", "=", 
       RowBox[{"OnFaces", "[", "p1", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"f2list", "=", 
       RowBox[{"OnFaces", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"f3list", "=", 
       RowBox[{"OnFaces", "[", "p3", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"flist", "=", 
       RowBox[{"Intersection", "[", 
        RowBox[{"f1list", ",", "f2list", ",", "f3list"}], "]"}]}], ";", 
      RowBox[{"(*", "Int", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<PathAng:OnFace:{f1list,f2list,f3list},flist=\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"f1list", ",", "f2list", ",", "f3list"}], "}"}], ",", 
          "\"\<:\>\"", ",", "flist"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "flist", "]"}], "\[Equal]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fi", "=", 
          RowBox[{"First", "[", "flist", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"If", "[", 
          RowBox[{"debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<PathAng:p123 are \
\!\(\*StyleBox[\"on\",FontSlant->\"Italic\"]\) fi=\>\"", ",", "fi"}], "]"}]}],
           "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"code", "=", "\"\<f\>\""}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"code", ",", "fi", ",", 
            RowBox[{"PathAngInFace", "[", 
             RowBox[{"fi", ",", 
              RowBox[{"{", 
               RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}]}], "]"}]}], "}"}], 
          "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"debug", ",", 
        RowBox[{
        "Print", "[", 
         "\"\<PathAng:p123 not all \
\!\(\*StyleBox[\"on\",FontSlant->\"Italic\"]\) some face\>\"", "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"vi", "=", 
       RowBox[{"IsVertexQ", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"vi", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<PathAng:p2 is at vi=\>\"", ",", "vi"}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"code", "=", "\"\<v\>\""}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"code", ",", "vi", ",", 
            RowBox[{"PathAngAtVertex", "[", 
             RowBox[{"vi", ",", 
              RowBox[{"{", 
               RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}]}], "]"}]}], "}"}], 
          "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Ifv", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ei", "=", 
       RowBox[{"IsOnEdgeQ", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ei", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<PathAng:p2 is on ei=\>\"", ",", "ei"}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"code", "=", "\"\<e\>\""}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"code", ",", "ei", ",", 
            RowBox[{"PathAngOnEdge", "[", 
             RowBox[{"ei", ",", 
              RowBox[{"{", 
               RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", "f2list"}], 
             "]"}]}], "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Ife", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "p2", " ", "must", " ", "be", " ", "interior", " ", "to", " ", "a", 
         " ", "face"}], ","}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"(", 
        RowBox[{
        "Assuming", " ", "it", " ", "is", " ", "on", " ", "the", " ", 
         RowBox[{"surface", "--"}], "Not", " ", 
         RowBox[{"chkd", "!"}]}], ")"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"fi", "=", 
       RowBox[{"IsInFaceQ", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"fi", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", "\"\<Error in PathAng:p not in face\>\"", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<PathAng:p2 is \!\(\*StyleBox[\"in\",FontSlant->\"Italic\"]\) \
fi=\>\"", ",", "fi"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"code", "=", "\"\<f\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"code", ",", "fi", ",", 
         RowBox[{"PathAngInFace", "[", 
          RowBox[{"fi", ",", 
           RowBox[{"{", 
            RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}]}], "]"}]}], "}"}], 
       "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6455449898788977`*^9, 3.645545087460774*^9}, {
   3.6455451700835867`*^9, 3.645545170433979*^9}, {3.645545320222824*^9, 
   3.645545349636375*^9}, {3.645545392260467*^9, 3.645545519401116*^9}, {
   3.645545623023725*^9, 3.645545730640791*^9}, {3.645545771951393*^9, 
   3.645545777487426*^9}, {3.645546212043158*^9, 3.645546239699089*^9}, {
   3.645546379974341*^9, 3.645546481662196*^9}, {3.645553257423429*^9, 
   3.64555329906461*^9}, {3.645553346572639*^9, 3.645553365621615*^9}, {
   3.6456083669495*^9, 3.6456084272070513`*^9}, {3.645608477389646*^9, 
   3.645608661228928*^9}, {3.645608717240254*^9, 3.645608724884614*^9}, {
   3.645610313730242*^9, 3.645610329743102*^9}, {3.645610371854248*^9, 
   3.645610468247196*^9}, {3.645610560237494*^9, 3.645610609669248*^9}, {
   3.645611092170006*^9, 3.645611347873909*^9}, {3.645611395049386*^9, 
   3.645611444388109*^9}, {3.6456115480660267`*^9, 3.645611675859028*^9}, {
   3.6456117121318693`*^9, 3.645611762941431*^9}, {3.645620138448422*^9, 
   3.645620147967811*^9}, {3.6456202308559732`*^9, 3.645620238562698*^9}, {
   3.645620477721012*^9, 3.645620554042708*^9}, {3.645620618417664*^9, 
   3.645620634440452*^9}, {3.645620706335588*^9, 3.645620722674118*^9}, {
   3.6456207576209*^9, 3.6456208798919687`*^9}, {3.645620920753376*^9, 
   3.645621012347674*^9}, {3.645621057112812*^9, 3.6456210781023817`*^9}, {
   3.6456211224570513`*^9, 3.645621175192834*^9}, {3.645621221801738*^9, 
   3.6456212974435167`*^9}, {3.645621819570964*^9, 3.645621957043786*^9}, {
   3.645622113081827*^9, 3.64562221582664*^9}, {3.6456223446295424`*^9, 
   3.645622376225795*^9}, {3.645622435961678*^9, 3.645622584134203*^9}, {
   3.645622617286481*^9, 3.645622746743678*^9}, {3.645622809892552*^9, 
   3.645622843666273*^9}, {3.6456229055746727`*^9, 3.645623034681815*^9}, {
   3.645623091772867*^9, 3.6456231411842546`*^9}, {3.645623204893199*^9, 
   3.645623227894705*^9}, 3.645623332057193*^9, {3.645623421441423*^9, 
   3.645623482237595*^9}, {3.645623563181838*^9, 3.6456236241276293`*^9}, {
   3.6456237268709173`*^9, 3.6456237382985487`*^9}, {3.6456240796402884`*^9, 
   3.645624126026802*^9}, {3.645624165669299*^9, 3.645624359790906*^9}, {
   3.645624424854761*^9, 3.645624469323197*^9}, 3.645625691437467*^9, {
   3.645625981689446*^9, 3.645625998183029*^9}, {3.6456263984349127`*^9, 
   3.6456264073382874`*^9}, {3.645626557005591*^9, 3.645626567792501*^9}, {
   3.645626603553278*^9, 3.645626606453524*^9}, {3.645626654095036*^9, 
   3.645626656054178*^9}, 3.645626731366191*^9, 3.645626843639513*^9, {
   3.64571351255233*^9, 3.645713544073943*^9}, {3.645714564096665*^9, 
   3.645714637116475*^9}, {3.645719105692765*^9, 3.645719195856266*^9}, {
   3.645785450386047*^9, 3.645785518268961*^9}, 3.645791566445292*^9, {
   3.6461500071009083`*^9, 3.6461500426699953`*^9}, {3.6461509291382093`*^9, 
   3.646150978044539*^9}, {3.646151066490226*^9, 3.646151138549308*^9}, {
   3.6461513093829536`*^9, 3.646151341561064*^9}, {3.646151377954122*^9, 
   3.646151465245824*^9}, {3.646216675513015*^9, 3.646216677619844*^9}, 
   3.646216712721092*^9, {3.646217924885992*^9, 3.6462180853427277`*^9}, {
   3.6462182002098017`*^9, 3.646218229048609*^9}, {3.646218400949428*^9, 
   3.646218410137415*^9}, {3.646224378617299*^9, 3.646224459666708*^9}, {
   3.646224523280839*^9, 3.6462245454565496`*^9}, {3.646334315983781*^9, 
   3.64633432273472*^9}, {3.646334714171113*^9, 3.64633474774892*^9}, {
   3.646335506337399*^9, 3.646335511551956*^9}, {3.647115981895447*^9, 
   3.647116054722838*^9}, {3.650629293277491*^9, 3.6506293099629498`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"c3228bf8-23b3-4d24-a4bd-908faa76c894"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PathAngInFace", "[", 
    RowBox[{"fi_", ",", 
     RowBox[{"{", 
      RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Theta]", ",", "nvec", ",", "v12", ",", "v23", ",", "cross", ",", 
       "dot", ",", "\[Rho]", ",", "\[Lambda]", ",", "vi", ",", "\[Omega]"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]", "=", 
       RowBox[{"TriMidAngle", "[", 
        RowBox[{"{", 
         RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"debug1", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<PathAngInFace:\[Theta]=\>\"", ",", 
          RowBox[{"\[Theta]", " ", "RadDeg"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Ang", " ", "is", " ", "either", " ", "\[Theta]", " ", "or", " ", "2",
          "\[Pi]"}], "-", "\[Theta]"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"nvec", "=", 
       RowBox[{"FaceNormal", "[", "fi", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v12", "=", 
       RowBox[{"p2", "-", "p1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v23", "=", 
       RowBox[{"p3", "-", "p2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cross", "=", 
       RowBox[{
        RowBox[{"Normalize", "[", 
         RowBox[{"v12", " ", "\[Cross]", "v23"}], "]"}], "//", "N"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dot", "=", 
       RowBox[{"cross", ".", "nvec"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"debug1", ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<PathAngInFace:{nvec,cross,dot}=\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"nvec", ",", "cross", ",", "dot"}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FuzzZero", "[", "dot", "]"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<Error in PathAngInFace:dot==0\>\"", "]"}],
          ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"dot", ">", "0"}], " ", ",", "\[IndentingNewLine]", 
        RowBox[{"\[Lambda]", "=", "\[Theta]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Lambda]", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "\[Pi]"}], "-", "\[Omega]"}], ")"}], "-", 
          "\[Theta]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"vi", "=", 
       RowBox[{"IsVertexQ", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"vi", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Omega]", "=", 
         RowBox[{"CurvVertex", "[", "vi", "]"}]}], ",", 
        RowBox[{"\[Omega]", "=", "0."}]}], "\[IndentingNewLine]", "]"}], ";", 
      
      RowBox[{"(*", "Ifvert", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], "-", "\[Omega]"}], ")"}], "-", 
        "\[Lambda]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"now", " ", "allowing", " ", 
        RowBox[{"p2", "@", "vi"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", "\[Rho]"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"debug", "=", "True"}], ";", 
    RowBox[{"debug1", "=", "True"}], ";", 
    RowBox[{
     RowBox[{"PathAngInFace", "[", 
      RowBox[{"11", ",", 
       RowBox[{"ppath", "\[LeftDoubleBracket]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], 
        "\[RightDoubleBracket]"}]}], "]"}], "RadDeg"}]}], "*)"}]}]}], "Input",\

 CellChangeTimes->{{3.6455449898788977`*^9, 3.645545087460774*^9}, {
   3.6455451700835867`*^9, 3.645545170433979*^9}, {3.645545320222824*^9, 
   3.645545349636375*^9}, {3.645545392260467*^9, 3.645545519401116*^9}, {
   3.645545623023725*^9, 3.645545730640791*^9}, {3.645545771951393*^9, 
   3.645545777487426*^9}, {3.645546212043158*^9, 3.645546239699089*^9}, {
   3.645546379974341*^9, 3.645546481662196*^9}, {3.645553257423429*^9, 
   3.64555329906461*^9}, {3.645553346572639*^9, 3.645553365621615*^9}, {
   3.6456083669495*^9, 3.6456084272070513`*^9}, {3.645608477389646*^9, 
   3.645608661228928*^9}, {3.645608717240254*^9, 3.645608724884614*^9}, {
   3.645610313730242*^9, 3.645610329743102*^9}, {3.645610371854248*^9, 
   3.645610468247196*^9}, {3.645610560237494*^9, 3.645610609669248*^9}, {
   3.645611092170006*^9, 3.645611347873909*^9}, {3.645611395049386*^9, 
   3.645611444388109*^9}, {3.6456115480660267`*^9, 3.645611675859028*^9}, {
   3.6456117121318693`*^9, 3.645611762941431*^9}, {3.645620138448422*^9, 
   3.645620147967811*^9}, {3.6456202308559732`*^9, 3.645620238562698*^9}, {
   3.645620477721012*^9, 3.645620554042708*^9}, {3.645620618417664*^9, 
   3.645620634440452*^9}, {3.645620706335588*^9, 3.645620722674118*^9}, {
   3.6456207576209*^9, 3.6456208798919687`*^9}, {3.645620920753376*^9, 
   3.645621012347674*^9}, {3.645621057112812*^9, 3.6456210781023817`*^9}, {
   3.6456211224570513`*^9, 3.645621175192834*^9}, {3.645621221801738*^9, 
   3.6456212974435167`*^9}, {3.645621819570964*^9, 3.645621957043786*^9}, {
   3.645622113081827*^9, 3.64562221582664*^9}, {3.6456223446295424`*^9, 
   3.645622376225795*^9}, {3.645622435961678*^9, 3.645622584134203*^9}, {
   3.645622617286481*^9, 3.645622746743678*^9}, {3.645622809892552*^9, 
   3.645622843666273*^9}, {3.6456229055746727`*^9, 3.645623034681815*^9}, {
   3.645623091772867*^9, 3.6456231411842546`*^9}, {3.645623204893199*^9, 
   3.645623227894705*^9}, 3.645623332057193*^9, {3.645623421441423*^9, 
   3.645623482237595*^9}, {3.645623563181838*^9, 3.6456236241276293`*^9}, {
   3.6456237268709173`*^9, 3.6456237382985487`*^9}, {3.6456240796402884`*^9, 
   3.645624126026802*^9}, {3.645624165669299*^9, 3.645624359790906*^9}, {
   3.645624424854761*^9, 3.645624469323197*^9}, 3.645625691437467*^9, {
   3.645625981689446*^9, 3.645625998183029*^9}, {3.6456263984349127`*^9, 
   3.6456264073382874`*^9}, {3.645626557005591*^9, 3.645626567792501*^9}, {
   3.645626603553278*^9, 3.645626606453524*^9}, {3.645626654095036*^9, 
   3.645626656054178*^9}, 3.645626731366191*^9, 3.645626843639513*^9, {
   3.64571351255233*^9, 3.645713544073943*^9}, {3.645714564096665*^9, 
   3.645714637116475*^9}, {3.645719105692765*^9, 3.645719195856266*^9}, {
   3.645785450386047*^9, 3.645785619078415*^9}, {3.645785672843605*^9, 
   3.64578569454736*^9}, {3.645785728270587*^9, 3.645785730365438*^9}, {
   3.6457860386298122`*^9, 3.645786048176045*^9}, {3.645786113601941*^9, 
   3.645786145825962*^9}, {3.6457861919008703`*^9, 3.645786219981814*^9}, {
   3.645786263567134*^9, 3.645786268423168*^9}, {3.646218314517064*^9, 
   3.646218322618709*^9}, {3.646218359895056*^9, 3.646218360364471*^9}, {
   3.6463343554677267`*^9, 3.6463344263433323`*^9}, {3.64633446210494*^9, 
   3.646334546954438*^9}, 3.6465010777205353`*^9},
 CellLabel->
  "In[136]:=",ExpressionUUID->"26152516-eb69-4771-b9ad-6f98353c03a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Used", " ", "also", " ", "in", " ", 
     RowBox[{"SpiralAllBands", "[", "]"}], " ", "to", " ", "handle", " ", 
     "bot", " ", "vert", " ", "i"}], "=", 
    RowBox[{"1", " ", "upsidedown"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SwapLists", "[", 
      RowBox[{"L1_", ",", "L2_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"L1new", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"L2new", "=", 
          RowBox[{"{", "}"}]}], ",", "i", ",", "n"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"Length", "[", "L1", "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "L2", "]"}], "\[NotEqual]", "n"}], ",", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Error in SwapLists:n=\>\"", ",", "n"}], "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", "n"}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"L1new", ",", 
             RowBox[{
             "L2", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"L2new", ",", 
             RowBox[{
             "L1", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"L1new", ",", "L2new"}], "}"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"!", 
     RowBox[{"gen", " ", 
      RowBox[{"bug", ":", " ", 
       RowBox[{"assumes", " ", "path", " ", "is", " ", "ccw"}]}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PathAngOnEdge", "[", 
      RowBox[{"ei_", ",", 
       RowBox[{"{", 
        RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "}"}], ",", "f2list_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "e1", ",", "e2", ",", "\[Rho]", ",", "\[Lambda]", ",", "\[Lambda]0", 
         ",", "\[Lambda]1", ",", "cross", ",", "nvec1", ",", "nvec2", ",", 
         "dot1", ",", "dot2", ",", "eptleft"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"Get", " ", "two", " ", "edge"}], "-", "pts"}], ",", 
         RowBox[{"e1", " ", "zlower", " ", "than", " ", "e2"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"BUG", " ", 
          RowBox[{"HERE", "!"}], " ", "What", " ", "if", " ", "p3"}], "=", 
         "e2"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"e1", ",", "e2"}], "}"}], "=", 
         RowBox[{
         "verts3d", "\[LeftDoubleBracket]", "ei", "\[RightDoubleBracket]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "e1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], ">", 
           " ", 
           RowBox[{
           "e2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
          ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e1", ",", "e2"}], "}"}], "=", 
           RowBox[{"SwapLists", "[", 
            RowBox[{"e1", ",", "e2"}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"debug1", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<PathAngOnEdge:{ei,e1,e2}=\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"ei", ",", "e1", ",", "e2"}], "}"}]}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Now", " ", "need", " ", "to", " ", "decide", " ", "if", " ", 
           "e1"}], "|", 
          RowBox[{"e2", " ", "is", " ", "left"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"cross", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"p2", "-", "p1"}], ")"}], "\[Cross]", 
          RowBox[{"(", 
           RowBox[{"e1", "-", "p2"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cross", "=", 
         RowBox[{
          RowBox[{"Normalize", "[", "cross", "]"}], "//", "N"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nvec1", "=", 
         RowBox[{"FaceNormal", "[", 
          RowBox[{
          "f2list", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nvec2", "=", 
         RowBox[{"FaceNormal", "[", 
          RowBox[{
          "f2list", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dot1", "=", 
         RowBox[{"cross", ".", "nvec1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dot2", "=", 
         RowBox[{"cross", ".", "nvec2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"debug1", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<PathAngOnEdge:{dot1,dot2}=\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"dot1", ",", "dot2"}], "}"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FuzzEq", "[", 
            RowBox[{"dot1", ",", "1."}], "]"}], "||", 
           RowBox[{"FuzzEq", "[", 
            RowBox[{"dot2", ",", "1."}], "]"}]}], ",", "\[IndentingNewLine]", 
          
          RowBox[{"eptleft", "=", "e1"}], ",", 
          RowBox[{"eptleft", "=", "e2"}]}], "]"}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"\[Lambda]0", "=", 
         RowBox[{"TriMidAngle", "[", 
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2", ",", "eptleft"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Lambda]1", "=", 
         RowBox[{"TriMidAngle", "[", 
          RowBox[{"{", 
           RowBox[{"eptleft", ",", "p2", ",", "p3"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Lambda]", "=", 
         RowBox[{"\[Lambda]0", "+", "\[Lambda]1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Rho]", "=", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], "-", "\[Lambda]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"debug1", ",", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<PathAngOnEdge:{\[Lambda]0,\[Lambda]1,\[Rho]}=\>\"", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Lambda]0", ",", "\[Lambda]1", ",", "\[Rho]"}], "}"}],
              "RadDeg"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "\[Rho]"}], "}"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6455449898788977`*^9, 3.645545087460774*^9}, {
   3.6455451700835867`*^9, 3.645545170433979*^9}, {3.645545320222824*^9, 
   3.645545349636375*^9}, {3.645545392260467*^9, 3.645545519401116*^9}, {
   3.645545623023725*^9, 3.645545730640791*^9}, {3.645545771951393*^9, 
   3.645545777487426*^9}, {3.645546212043158*^9, 3.645546239699089*^9}, {
   3.645546379974341*^9, 3.645546481662196*^9}, {3.645553257423429*^9, 
   3.64555329906461*^9}, {3.645553346572639*^9, 3.645553365621615*^9}, {
   3.6456083669495*^9, 3.6456084272070513`*^9}, {3.645608477389646*^9, 
   3.645608661228928*^9}, {3.645608717240254*^9, 3.645608724884614*^9}, {
   3.645610313730242*^9, 3.645610329743102*^9}, {3.645610371854248*^9, 
   3.645610468247196*^9}, {3.645610560237494*^9, 3.645610609669248*^9}, {
   3.645611092170006*^9, 3.645611347873909*^9}, {3.645611395049386*^9, 
   3.645611444388109*^9}, {3.6456115480660267`*^9, 3.645611675859028*^9}, {
   3.6456117121318693`*^9, 3.645611762941431*^9}, {3.645620138448422*^9, 
   3.645620147967811*^9}, {3.6456202308559732`*^9, 3.645620238562698*^9}, {
   3.645620477721012*^9, 3.645620554042708*^9}, {3.645620618417664*^9, 
   3.645620634440452*^9}, {3.645620706335588*^9, 3.645620722674118*^9}, {
   3.6456207576209*^9, 3.6456208798919687`*^9}, {3.645620920753376*^9, 
   3.645621012347674*^9}, {3.645621057112812*^9, 3.6456210781023817`*^9}, {
   3.6456211224570513`*^9, 3.645621175192834*^9}, {3.645621221801738*^9, 
   3.6456212974435167`*^9}, {3.645621819570964*^9, 3.645621957043786*^9}, {
   3.645622113081827*^9, 3.64562221582664*^9}, {3.6456223446295424`*^9, 
   3.645622376225795*^9}, {3.645622435961678*^9, 3.645622584134203*^9}, {
   3.645622617286481*^9, 3.645622746743678*^9}, {3.645622809892552*^9, 
   3.645622843666273*^9}, {3.6456229055746727`*^9, 3.645623034681815*^9}, {
   3.645623091772867*^9, 3.6456231411842546`*^9}, {3.645623204893199*^9, 
   3.645623227894705*^9}, 3.645623332057193*^9, {3.645623421441423*^9, 
   3.645623482237595*^9}, {3.645623563181838*^9, 3.6456236241276293`*^9}, {
   3.6456237268709173`*^9, 3.6456237382985487`*^9}, {3.6456240796402884`*^9, 
   3.645624126026802*^9}, {3.645624165669299*^9, 3.645624359790906*^9}, {
   3.645624424854761*^9, 3.645624469323197*^9}, 3.645625691437467*^9, {
   3.645625981689446*^9, 3.645625998183029*^9}, {3.6456263984349127`*^9, 
   3.6456264073382874`*^9}, {3.645626557005591*^9, 3.645626567792501*^9}, {
   3.645626603553278*^9, 3.645626606453524*^9}, {3.645626654095036*^9, 
   3.645626656054178*^9}, 3.645626731366191*^9, 3.645626843639513*^9, {
   3.64571351255233*^9, 3.645713544073943*^9}, {3.645714564096665*^9, 
   3.645714637116475*^9}, {3.645719105692765*^9, 3.645719195856266*^9}, {
   3.645785450386047*^9, 3.6457855103734913`*^9}, {3.646149575462599*^9, 
   3.646149579973507*^9}, {3.646149955656322*^9, 3.646149961384736*^9}, {
   3.647081639002228*^9, 3.647081639311263*^9}, 3.647081881050671*^9, {
   3.650627468427174*^9, 3.6506274780418386`*^9}, {3.650627512107197*^9, 
   3.650627569365808*^9}, {3.650627604469051*^9, 3.650627636262142*^9}, {
   3.650628620215468*^9, 3.650628628285103*^9}, {3.650629323178894*^9, 
   3.650629595422002*^9}, {3.650629808564562*^9, 3.6506298252825317`*^9}, {
   3.650629910430685*^9, 3.6506299651267643`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"e721d7c5-f86e-4e1f-9d14-5d54f4bd0f04"],

Cell["\<\
PathAngAtVertex[] is the key func, and the most complicated.
Must also handle the case where p1 and/or p3 lie on edges incident to vi. So \
then entire face is included, and \[Lambda]1 or \[Lambda]3 = 0.
p1 lies in f1; p3 in f3.
f1\[Equal]f3 is tricky. But then {p1,p2,p3} all are on the face (perhaps on \
edge(s) of), and we can use normal calc to decide between \[Lambda]&\[Rho].\
\>", "Text",
 CellChangeTimes->{{3.6045924160858583`*^9, 3.6045924271812363`*^9}, {
   3.6161754139452133`*^9, 3.616175497432034*^9}, {3.616175586776231*^9, 
   3.616175598760043*^9}, {3.616276272127399*^9, 3.6162763590569563`*^9}, {
   3.6162777704309053`*^9, 3.616277816002232*^9}, 3.616336913686283*^9, {
   3.616336954341989*^9, 3.616337004253396*^9}, {3.616494876478307*^9, 
   3.6164948818535633`*^9}, {3.616494915512536*^9, 3.616494954410981*^9}, {
   3.616497147768772*^9, 3.616497181766472*^9}, {3.616497421598796*^9, 
   3.616497472986434*^9}, {3.616502337737956*^9, 3.616502367903183*^9}, {
   3.616502458904418*^9, 3.616502505743165*^9}, {3.616502654975054*^9, 
   3.616502662591063*^9}, {3.616502796241571*^9, 3.616502821087019*^9}, {
   3.61651346410536*^9, 3.6165135037212887`*^9}, 3.645542935048794*^9, {
   3.64554378675107*^9, 3.6455438003413553`*^9}, {3.645543991984983*^9, 
   3.645544022149996*^9}, {3.645545025734125*^9, 3.64554504398942*^9}, {
   3.645545219927693*^9, 3.645545241167192*^9}, {3.645608678511454*^9, 
   3.645608705275404*^9}, {3.6456268522203074`*^9, 3.645626910028122*^9}, {
   3.645896480933301*^9, 3.645896490878737*^9}, {3.6458971845913258`*^9, 
   3.6458972512832727`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell["\<\
Bug here! p1 or p3 might be far away, across coplanar faces. So m1&m3 are not \
automatically on vadj face. How to fix?
Write separate fnc: p1,p2=vi & vadj, and finds an m1 on one of those faces. \
FaceForSeg[{p1,p2},vadj].
Maybe iterate bisecting? No more than #edges times?

Remove IsVertex[] & IsOnEdge[] code; should be handled in other code.\
\>", "Text",
 CellChangeTimes->{{3.6045924160858583`*^9, 3.6045924271812363`*^9}, {
   3.6161754139452133`*^9, 3.616175497432034*^9}, {3.616175586776231*^9, 
   3.616175598760043*^9}, {3.616276272127399*^9, 3.6162763590569563`*^9}, {
   3.6162777704309053`*^9, 3.616277816002232*^9}, 3.616336913686283*^9, {
   3.616336954341989*^9, 3.616337004253396*^9}, {3.616494876478307*^9, 
   3.6164948818535633`*^9}, {3.616494915512536*^9, 3.616494954410981*^9}, {
   3.616497147768772*^9, 3.616497181766472*^9}, {3.616497421598796*^9, 
   3.616497472986434*^9}, {3.616502337737956*^9, 3.616502367903183*^9}, {
   3.616502458904418*^9, 3.616502505743165*^9}, {3.616502654975054*^9, 
   3.616502662591063*^9}, {3.616502796241571*^9, 3.616502821087019*^9}, {
   3.61651346410536*^9, 3.6165135037212887`*^9}, 3.645542935048794*^9, {
   3.64554378675107*^9, 3.6455438003413553`*^9}, {3.645543991984983*^9, 
   3.645544022149996*^9}, {3.645545025734125*^9, 3.64554504398942*^9}, {
   3.645545219927693*^9, 3.645545241167192*^9}, {3.645608678511454*^9, 
   3.645608705275404*^9}, {3.6456268522203074`*^9, 3.645626910028122*^9}, {
   3.645896480933301*^9, 3.645896490878737*^9}, {3.6458971845913258`*^9, 
   3.6458972512832727`*^9}, {3.6463274558066998`*^9, 3.64632751736302*^9}, {
   3.646327625966926*^9, 3.6463276691817083`*^9}, {3.646327699940402*^9, 
   3.6463277165242662`*^9}, {3.6463278759899893`*^9, 3.646327905300621*^9}, {
   3.64632825151562*^9, 3.646328271129698*^9}, {3.646499652142873*^9, 
   3.6464996887643347`*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FaceForSeg", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1_", ",", "p2_"}], "}"}], ",", "vadj_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fi", ",", "i", ",", "n", ",", "m1", ",", "kmax", ",", "k", ",", "ei", 
       ",", "adjf", ",", "vi1", ",", "vi2", ",", "eind"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "vadj", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"kmax", "=", 
       RowBox[{"Length", "[", "edges", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"m1", "=", "p1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"vi2", "=", 
       RowBox[{"IsVertexQ", "[", "p2", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", "kmax"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"vi1", "=", 
           RowBox[{"IsVertexQ", "[", "m1", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"debug1", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<FaceForSeg:m1 ==vi1?\>\"", ",", "vi1"}], "]"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"vi1", ">", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ei", "=", 
              RowBox[{"Sort", "[", 
               RowBox[{"{", 
                RowBox[{"vi1", ",", "vi2"}], "}"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"edges", ",", "ei"}], "]"}]}], ",", 
               RowBox[{"ei", "=", 
                RowBox[{"{", "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
           "]"}], ";", 
          RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"debug1", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<FaceForSeg:After chk ei=\>\"", ",", "ei"}], "]"}]}],
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "ei", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{"ei", "=", 
             RowBox[{"IsOnEdgeQ", "[", "m1", "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"debug1", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<FaceForSeg:m1 on? edge ei=\>\"", ",", "ei"}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "ei", "]"}], ">", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"eind", "=", 
              RowBox[{"Position", "[", 
               RowBox[{"edges", ",", "ei"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"eind", "=", 
              RowBox[{"First", "[", 
               RowBox[{"First", "[", "eind", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"adjf", "=", 
              RowBox[{
              "adjfaces", "\[LeftDoubleBracket]", "eind", 
               "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"debug", ",", 
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<FaceForSeg:m1 is on edge ei=\>\"", ",", "ei", ",", 
                 "\"\<,adjf=\>\"", ",", "adjf"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"fi", "=", 
              RowBox[{
              "adjf", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"vadj", ",", "fi"}], "]"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"m1", ",", "fi"}], "}"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"fi", "=", 
              RowBox[{
              "adjf", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"vadj", ",", "fi"}], "]"}], ",", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"m1", ",", "fi"}], "}"}], "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}], 
         RowBox[{"(*", "Ifei", "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "n"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"fi", "=", 
             RowBox[{
             "vadj", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"debug1", ",", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<FaceForSeg:m1 in? face fi=\>\"", ",", "fi"}], 
               "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"IsInFace1Q", "[", 
               RowBox[{"fi", ",", "m1"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{"debug", ",", 
                 RowBox[{"Print", "[", 
                  RowBox[{"\"\<FaceForSeg:m1 is in face fi=\>\"", ",", "fi"}],
                   "]"}]}], "]"}], ";", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"m1", ",", "fi"}], "}"}], "]"}]}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], ";", 
         RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "m1", " ", "not", " ", "interior", " ", "to", " ", "a", " ", 
           "face"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"So", " ", "go", " ", "closer", " ", "to", " ", 
           RowBox[{"p2", ":"}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"m1", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"m1", "+", "p2"}], ")"}], "/", "2"}], "//", "N"}]}], 
         ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Fork", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Error in FaceForSeg: after kmax iters, cannot find \
face;{kmax,vadj}=\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"kmax", ",", "vadj"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/dKNqfei1mvHQw9tJ4DoHXa600C03vziGSB6iv77
eSB60yWpdSDaNTx+M4jW/bloG4juMpDeA6LtSnRuguiqfD+GSyB9pw+ygugd
UzZ0g+gZtyb3gGj3PebhV4D0raTzaSA6g9EsD0S/WXG/GkR/EE58B6InOb/6
BKIttOR/guhZB/z/gGipKhXOq0B6XfkiMB0v8UUFRL9Sn6wJou8Jfk8C0YfU
LjWC+VO9z4Fongqv8yB6CqfjFbD6rMNXQfRakRdPQHRJ+8PnILruS+cXEO12
7vg3ED097ILQNSAdlXxYEkQ3THdJVdV+7fjI3igdRAMASAKpbQ==
  "],
 CellLabel->
  "In[139]:=",ExpressionUUID->"f3b04405-f7c7-45d2-8c6f-807052dd1bff"],

Cell["\<\
Bug here. When p1 is on edge, FaceForSeg selects on adjface, but depending, \
it might need to be one or the other, p1 vs p2, ccw vs cw.
The old code handled this. Might need to return to it...?\
\>", "Text",
 CellChangeTimes->{{3.646342017894063*^9, 3.6463421149256363`*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PathAngAtVertex", "[", 
     RowBox[{"vi_", ",", 
      RowBox[{"{", 
       RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "}"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "v", ",", "vadj", ",", "nvadj", ",", "i", ",", "i1", ",", "k", ",", 
        "k0", ",", "m1", ",", "m3", ",", "f1", ",", "f3", ",", "\[Rho]", ",", 
        "\[Lambda]", ",", "\[Lambda]1", ",", "\[Lambda]3", ",", "ei", ",", 
        "ei1", ",", "e1", ",", "e3", ",", "\[Omega]", ",", 
        RowBox[{"m1onedge", "=", "False"}], ",", 
        RowBox[{"m3onedge", "=", "False"}], ",", "\[Theta]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{"debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<PathAngAtVertex: vi=\>\"", ",", "vi"}], "]"}]}], 
         "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Omega]", "=", 
        RowBox[{"CurvVertex", "[", "vi", "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{"debug", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<==>PathAngAtVertex: {vi,\[Omega]}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"vi", ",", "\[Omega]"}], "}"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"v", "=", 
        RowBox[{
        "verts3d", "\[LeftDoubleBracket]", "vi", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FuzzEqVec", "[", 
           RowBox[{"v", ",", "p2"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Error in PathAngAtVertex:{v,p2}=\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"v", ",", "p2"}], "}"}]}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "vadjccws", " ", "indexed", " ", "the", " ", "same", " ", "as", " ", 
         RowBox[{"verts3d", ":"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"vadj", "=", 
        RowBox[{
         RowBox[{
         "vadjccws", "\[LeftDoubleBracket]", "vi", "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"nvadj", "=", 
        RowBox[{"Length", "[", "vadj", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"debug", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<PathAngAtVertex: vadj=\>\"", ",", "vadj"}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "1", "st", " ", "check", " ", "if", " ", "on", " ", "incident", " ", 
         "edge"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"m1", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"v", "+", "p1"}], ")"}], "/", "2"}]}], ";", 
       RowBox[{"m3", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"v", "+", "p3"}], ")"}], "/", "2"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Another", " ", 
         RowBox[{"possibility", ":", " ", 
          RowBox[{
          "lie", " ", "on", " ", "edge", " ", "incident", " ", "to", " ", 
           "vi"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"f1", "=", 
        RowBox[{"f3", "=", "0"}]}], ";", 
       RowBox[{"m1onedge", "=", 
        RowBox[{"m3onedge", "=", "False"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"ei", "=", 
        RowBox[{"IsOnEdgeQ", "[", "m1", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "ei", "]"}], ">", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"debug", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<PathAngAtVertex: m1 on ei=\>\"", ",", "ei"}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", "nvadj"}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"i1", "=", 
              RowBox[{"mod", "[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "nvadj"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ei1", "=", 
              RowBox[{"ShareEdgeQ", "[", 
               RowBox[{
                RowBox[{
                "vadj", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], ",", 
                RowBox[{
                "vadj", "\[LeftDoubleBracket]", "i1", 
                 "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ei", "\[Equal]", "ei1"}], ",", "\[IndentingNewLine]", 
               
               RowBox[{
                RowBox[{"f1", "=", 
                 RowBox[{
                 "vadj", "\[LeftDoubleBracket]", "i1", 
                  "\[RightDoubleBracket]"}]}], ";", 
                RowBox[{"\[Lambda]1", "=", "0."}], ";", 
                RowBox[{"m1onedge", "=", "True"}], ";", 
                RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", 
              "]"}]}]}], 
           RowBox[{"(*", 
            RowBox[{"If", "\[Equal]"}], "*)"}], "\[IndentingNewLine]", "]"}], 
          ";", 
          RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"debug", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<PathAngAtVertex: f1(ccw/after)=\>\"", ",", "f1"}], 
             "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ei", "=", 
        RowBox[{"IsOnEdgeQ", "[", "m3", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "ei", "]"}], ">", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"debug", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<PathAngAtVertex: m3 on ei=\>\"", ",", "ei"}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", "nvadj"}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"i1", "=", 
              RowBox[{"mod", "[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "nvadj"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ei1", "=", 
              RowBox[{"ShareEdgeQ", "[", 
               RowBox[{
                RowBox[{
                "vadj", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], ",", 
                RowBox[{
                "vadj", "\[LeftDoubleBracket]", "i1", 
                 "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ei", "\[Equal]", "ei1"}], ",", "\[IndentingNewLine]", 
               
               RowBox[{
                RowBox[{"f3", "=", 
                 RowBox[{
                 "vadj", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}]}], ";", 
                RowBox[{"\[Lambda]3", "=", "0."}], ";", 
                RowBox[{"m3onedge", "=", "True"}], ";", 
                RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", 
              "]"}]}]}], 
           RowBox[{"(*", 
            RowBox[{"If", "\[Equal]"}], "*)"}], "\[IndentingNewLine]", "]"}], 
          ";", 
          RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"debug", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<PathAngAtVertex: f3(cw/before)=\>\"", ",", "f1"}], 
             "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "If", " ", "either", " ", "f1", " ", "or", " ", "f3", " ", "found", 
          " ", "above"}], ",", " ", 
         RowBox[{"code", " ", "below", " ", "will", " ", "not", " ", 
          RowBox[{"change", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "nvadj"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"f1", "\[Equal]", "0"}], ")"}], "&&", 
               RowBox[{"(", 
                RowBox[{"IsInFace1Q", "[", 
                 RowBox[{
                  RowBox[{
                  "vadj", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], ",", "m1"}], "]"}], ")"}]}], 
              ",", 
              RowBox[{"f1", "=", 
               RowBox[{
               "vadj", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"f3", "\[Equal]", "0"}], ")"}], "&&", 
               RowBox[{"(", 
                RowBox[{"IsInFace1Q", "[", 
                 RowBox[{
                  RowBox[{
                  "vadj", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], ",", "m3"}], "]"}], ")"}]}], 
              ",", 
              RowBox[{"f3", "=", 
               RowBox[{
               "vadj", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], 
        RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Else", ",", 
         RowBox[{"find", " ", "faces"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", "m1onedge"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"m1", ",", "f1"}], "}"}], "=", 
          RowBox[{"FaceForSeg", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"p1", ",", "p2"}], "}"}], ",", "vadj"}], "]"}]}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", "m3onedge"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"m3", ",", "f3"}], "}"}], "=", 
          RowBox[{"FaceForSeg", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"p3", ",", "p2"}], "}"}], ",", "vadj"}], "]"}]}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"debug", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<PathAngAtVertex:{f1,f3}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"f1", ",", "f3"}], "}"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"f1", "\[Equal]", "0"}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{"f3", "\[Equal]", "0"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Error in PathAngAtVertex: {f1,f3}=\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"f1", ",", "f3"}], "}"}]}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"vadj", ",", "f1"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Error in PathAngAtVertex: f1 not in vadj:\>\"", ",", "f1", 
            ",", "vadj"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"vadj", ",", "f3"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Error in PathAngAtVertex: f3 not in vadj:\>\"", ",", "f3", 
            ",", "vadj"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Wraparound", ".", " ", 
         RowBox[{"Tricky", "!"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"f1", "\[Equal]", "f3"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"On", " ", "same", " ", "face"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"debug", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<PathAngAtVertex: f1=f3:\>\"", ",", "f1"}], "]"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Lambda]", ",", "\[Rho]"}], "}"}], "=", 
           RowBox[{"PathAngInFace", "[", 
            RowBox[{"f1", ",", 
             RowBox[{"{", 
              RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"debug", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<From PathAngInFace:{\[Lambda],\[Rho]}=\>\"", ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Lambda]", ",", "\[Rho]"}], "}"}], "RadDeg"}]}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"When", "<", "\[Pi]"}], ",", " ", "legit"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Lambda]", "<", "\[Pi]"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\[Rho]", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", "\[Pi]"}], "-", "\[Omega]"}], ")"}], "-", 
               "\[Lambda]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"\[Lambda]", ",", "\[Rho]"}], "}"}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"When", "\[GreaterEqual]", "\[Pi]"}], ",", " ", 
            RowBox[{"must", " ", "continue", " ", 
             RowBox[{"calc", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"debug", ",", 
            RowBox[{
            "Print", "[", "\"\<PathAngAtVertex:Continuing...\>\"", "]"}]}], 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       RowBox[{"(*", "IfSameFace", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Rotate", " ", "list", " ", "to", " ", "start", " ", "with", " ", 
         "f3"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "vadj", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[NotEqual]", " ", "f3"}], ",", "\[IndentingNewLine]", " ", 
         RowBox[{"vadj", "=", 
          RowBox[{"RotateLeft", "[", "vadj", "]"}]}]}], "\[IndentingNewLine]",
         "]"}], ";", 
       RowBox[{"(*", "While", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"debug", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<PathAngAtVertex: {f3,f1},vadj:\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"f3", ",", "f1"}], "}"}], ",", "vadj"}], "]"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Now", " ", "find", " ", "edges", " ", "of", " ", "those", " ", 
         "faces", " ", "for", " ", "sliver", " ", "comp"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ei", "=", 
        RowBox[{"ShareEdgeQ", "[", 
         RowBox[{"f3", ",", 
          RowBox[{
          "vadj", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ei", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"ei", ",", 
          RowBox[{
           RowBox[{"#", "\[NotEqual]", "vi"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ei", "=", 
        RowBox[{"First", "[", "ei", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"debug", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<PathAngAtVertex:vert ei3=\>\"", ",", "ei"}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"e3", "=", 
        RowBox[{
        "verts3d", "\[LeftDoubleBracket]", "ei", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"k", "=", 
        RowBox[{"First", "[", 
         RowBox[{"First", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"vadj", ",", "f1"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"k0", "=", 
        RowBox[{"mod", "[", 
         RowBox[{
          RowBox[{"k", "-", "1"}], ",", "nvadj"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ei", "=", 
        RowBox[{"ShareEdgeQ", "[", 
         RowBox[{"f1", ",", 
          RowBox[{
          "vadj", "\[LeftDoubleBracket]", "k0", "\[RightDoubleBracket]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ei", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"ei", ",", 
          RowBox[{
           RowBox[{"#", "\[NotEqual]", "vi"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ei", "=", 
        RowBox[{"First", "[", "ei", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"debug", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<PathAngAtVertex:vert ei1=\>\"", ",", "ei"}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"e1", "=", 
        RowBox[{
        "verts3d", "\[LeftDoubleBracket]", "ei", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", "m3onedge"}], ",", 
         RowBox[{"\[Lambda]3", "=", 
          RowBox[{"TriMidAngle", "[", 
           RowBox[{"{", 
            RowBox[{"e3", ",", "p2", ",", "p3"}], "}"}], "]"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", "m1onedge"}], ",", 
         RowBox[{"\[Lambda]1", "=", 
          RowBox[{"TriMidAngle", "[", 
           RowBox[{"{", 
            RowBox[{"p1", ",", "p2", ",", "e1"}], "}"}], "]"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"\[Lambda]", "=", "0."}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Rotated", " ", "so", " ", "f3", " ", "is", " ", "at", " ", "i"}], 
         "=", "1"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "2"}], ",", 
         RowBox[{"i", "\[LessEqual]", "nvadj"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "vadj", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "\[Equal]", "f1"}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"\[Lambda]", "+=", 
           RowBox[{"FaceAngleAtVertex", "[", 
            RowBox[{"vi", ",", 
             RowBox[{
             "vadj", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
             "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Lambda]", "=", 
        RowBox[{"\[Lambda]3", "+", "\[Lambda]", "+", "\[Lambda]1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Rho]", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "\[Pi]"}], "-", "\[Omega]"}], ")"}], "-", 
         "\[Lambda]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", "\[Rho]"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",\

 CellChangeTimes->{{3.6455449898788977`*^9, 3.645545087460774*^9}, {
   3.6455451700835867`*^9, 3.645545170433979*^9}, {3.645545320222824*^9, 
   3.645545349636375*^9}, {3.645545392260467*^9, 3.645545519401116*^9}, {
   3.645545623023725*^9, 3.645545730640791*^9}, {3.645545771951393*^9, 
   3.645545777487426*^9}, {3.645546212043158*^9, 3.645546239699089*^9}, {
   3.645546379974341*^9, 3.645546481662196*^9}, {3.645553257423429*^9, 
   3.64555329906461*^9}, {3.645553346572639*^9, 3.645553365621615*^9}, {
   3.6456083669495*^9, 3.6456084272070513`*^9}, {3.645608477389646*^9, 
   3.645608661228928*^9}, {3.645608717240254*^9, 3.645608724884614*^9}, {
   3.645610313730242*^9, 3.645610329743102*^9}, {3.645610371854248*^9, 
   3.645610468247196*^9}, {3.645610560237494*^9, 3.645610609669248*^9}, {
   3.645611092170006*^9, 3.645611347873909*^9}, {3.645611395049386*^9, 
   3.645611444388109*^9}, {3.6456115480660267`*^9, 3.645611675859028*^9}, {
   3.6456117121318693`*^9, 3.645611762941431*^9}, {3.645620138448422*^9, 
   3.645620147967811*^9}, {3.6456202308559732`*^9, 3.645620238562698*^9}, {
   3.645620477721012*^9, 3.645620554042708*^9}, {3.645620618417664*^9, 
   3.645620634440452*^9}, {3.645620706335588*^9, 3.645620722674118*^9}, {
   3.6456207576209*^9, 3.6456208798919687`*^9}, {3.645620920753376*^9, 
   3.645621012347674*^9}, {3.645621057112812*^9, 3.6456210781023817`*^9}, {
   3.6456211224570513`*^9, 3.645621175192834*^9}, {3.645621221801738*^9, 
   3.6456212974435167`*^9}, {3.645621819570964*^9, 3.645621957043786*^9}, {
   3.645622113081827*^9, 3.64562221582664*^9}, {3.6456223446295424`*^9, 
   3.645622376225795*^9}, {3.645622435961678*^9, 3.645622584134203*^9}, {
   3.645622617286481*^9, 3.645622746743678*^9}, {3.645622809892552*^9, 
   3.645622843666273*^9}, {3.6456229055746727`*^9, 3.645623034681815*^9}, {
   3.645623091772867*^9, 3.6456231411842546`*^9}, {3.645623204893199*^9, 
   3.645623227894705*^9}, 3.645623332057193*^9, {3.645623421441423*^9, 
   3.645623482237595*^9}, {3.645623563181838*^9, 3.6456236241276293`*^9}, {
   3.6456237268709173`*^9, 3.6456237382985487`*^9}, {3.6456240796402884`*^9, 
   3.645624126026802*^9}, {3.645624165669299*^9, 3.645624359790906*^9}, {
   3.645624424854761*^9, 3.645624469323197*^9}, 3.645625691437467*^9, {
   3.645625981689446*^9, 3.645625998183029*^9}, {3.6456263984349127`*^9, 
   3.6456264073382874`*^9}, {3.645626557005591*^9, 3.645626567792501*^9}, {
   3.645626603553278*^9, 3.645626606453524*^9}, {3.645626654095036*^9, 
   3.645626656054178*^9}, 3.645626731366191*^9, 3.645626843639513*^9, {
   3.6456270467338*^9, 3.645627070521379*^9}, {3.6456271334914293`*^9, 
   3.64562724792904*^9}, {3.645627390549378*^9, 3.645627391418895*^9}, {
   3.645627503822625*^9, 3.645627728149149*^9}, {3.645627843403792*^9, 
   3.64562801224618*^9}, {3.645628046880003*^9, 3.645628179970196*^9}, {
   3.645628359860618*^9, 3.6456283785156918`*^9}, {3.645628440218244*^9, 
   3.645628523805931*^9}, 3.6457135556705*^9, {3.6458888768734627`*^9, 
   3.645888879967546*^9}, {3.645896684320156*^9, 3.6458966938472548`*^9}, {
   3.6458972865785303`*^9, 3.645897341239748*^9}, {3.645897429750188*^9, 
   3.645897503337908*^9}, {3.645897571812155*^9, 3.645897609863439*^9}, {
   3.645897643135826*^9, 3.645897651046028*^9}, {3.6458977708267803`*^9, 
   3.645897807070964*^9}, {3.645897918053748*^9, 3.645897932930675*^9}, {
   3.645898008144696*^9, 3.645898088884136*^9}, {3.6458982310819693`*^9, 
   3.645898244047213*^9}, {3.645898291510621*^9, 3.645898328455575*^9}, {
   3.645898361100329*^9, 3.645898406726096*^9}, {3.6458985066924562`*^9, 
   3.6458985223255033`*^9}, {3.6458985759181013`*^9, 3.645898601315319*^9}, {
   3.6458987039879303`*^9, 3.645898729183461*^9}, {3.646327538493169*^9, 
   3.646327539164836*^9}, {3.646328933390267*^9, 3.646329020228258*^9}, {
   3.646329160362005*^9, 3.646329188909459*^9}, {3.646329911966689*^9, 
   3.646329930957286*^9}, {3.6463300845527887`*^9, 3.646330118936942*^9}, {
   3.6463424502684937`*^9, 3.646342607739565*^9}, {3.6468328342545767`*^9, 
   3.646832893483966*^9}, {3.64683315338234*^9, 3.646833161388926*^9}, {
   3.647258030465434*^9, 3.647258037273848*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"c3c65c17-98a4-4314-9a85-7ef38337ce41"],

Cell[CellGroupData[{

Cell["Testing the trickiest: PathAngAtVertex[].", "Subsubsection",
 CellChangeTimes->{{3.64578303572208*^9, 3.645783064364355*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"debug", "=", "True"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"PathAngAtVertex", "[", 
       RowBox[{"4", ",", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
             "verts3d", "\[LeftDoubleBracket]", "3", 
              "\[RightDoubleBracket]"}], "+", 
             RowBox[{
             "verts3d", "\[LeftDoubleBracket]", "8", 
              "\[RightDoubleBracket]"}]}], ")"}], "/", "2"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "verts3d", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
             "verts3d", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "+", 
             RowBox[{
             "verts3d", "\[LeftDoubleBracket]", "8", 
              "\[RightDoubleBracket]"}]}], ")"}], "/", "2"}]}], 
         "\[IndentingNewLine]", "}"}]}], "]"}], " ", "RadDeg"}], "]"}], ";"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"PathAngAtVertex", "[", 
       RowBox[{"4", ",", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "verts3d", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
          "verts3d", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
          "verts3d", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}],
          "\[IndentingNewLine]", "}"}]}], "]"}], " ", "RadDeg"}], "]"}], 
    ";"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.645625945710211*^9, 3.6456260003333197`*^9}, {
   3.645626080986823*^9, 3.6456261832903643`*^9}, {3.645626677602725*^9, 
   3.645626679560812*^9}, {3.645627287245428*^9, 3.645627325375099*^9}, {
   3.6456278098092537`*^9, 3.645627813022674*^9}, {3.645628215254053*^9, 
   3.6456282177254667`*^9}, 3.645628248603557*^9, 3.6456282858664713`*^9, 
   3.6456285628195667`*^9, {3.645783004965247*^9, 3.645783026022538*^9}, {
   3.647443659460866*^9, 3.647443668633616*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"0380da75-49fe-4234-9427-354577bd1afd"],

Cell["\<\
19Jul15. Flat bot/top cycle formation.
From PolyhedronMake.nb: {flatbot,flattop},{vflatbot,vflattop}\
\>", "Text",
 CellChangeTimes->{{3.5876766874771976`*^9, 3.58767669382759*^9}, {
   3.587676932725223*^9, 3.587676935310511*^9}, {3.5880233842939463`*^9, 
   3.5880234811214027`*^9}, {3.588060758399602*^9, 3.588060764582789*^9}, {
   3.588060840179935*^9, 3.588060959455077*^9}, {3.58806100037446*^9, 
   3.5880610158134212`*^9}, {3.604593526209601*^9, 3.604593540265007*^9}, {
   3.6221406095725393`*^9, 3.622140627505732*^9}, {3.622146240446817*^9, 
   3.622146243238419*^9}, {3.622148977142918*^9, 3.622148987205772*^9}, 
   3.628772908678434*^9, {3.628943316206661*^9, 3.62894333333554*^9}, {
   3.629284407690194*^9, 3.629284413669311*^9}, {3.645268840933076*^9, 
   3.645268896871121*^9}, {3.6452689736047993`*^9, 3.645268976348135*^9}, {
   3.645351571817296*^9, 3.645351603289547*^9}, {3.645355062626232*^9, 
   3.6453550701280327`*^9}, {3.6453551003230047`*^9, 3.645355150892003*^9}, {
   3.645356714988256*^9, 3.645356724275508*^9}, {3.645356768917329*^9, 
   3.645356769341332*^9}, {3.645358415177697*^9, 3.645358429088751*^9}, {
   3.6453589321381197`*^9, 3.6453589410824842`*^9}, {3.645363874100464*^9, 
   3.645363894555484*^9}, {3.645364159890192*^9, 3.6453641634182367`*^9}, {
   3.645544838850033*^9, 3.6455448789386597`*^9}, {3.645610163319182*^9, 
   3.645610206482841*^9}, {3.6456102499704514`*^9, 3.645610272703144*^9}, {
   3.6463008041408978`*^9, 3.64630081787363*^9}, {3.646300966224072*^9, 
   3.646300989259376*^9}, {3.6463010373959427`*^9, 3.6463010894385643`*^9}, {
   3.646318881011036*^9, 3.646318881429927*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["Have to rethink this... Use faces instead, tree struct? Yes.", "Text",
 CellChangeTimes->{{3.5876766874771976`*^9, 3.58767669382759*^9}, {
   3.587676932725223*^9, 3.587676935310511*^9}, {3.5880233842939463`*^9, 
   3.5880234811214027`*^9}, {3.588060758399602*^9, 3.588060764582789*^9}, {
   3.588060840179935*^9, 3.588060959455077*^9}, {3.58806100037446*^9, 
   3.5880610158134212`*^9}, {3.604593526209601*^9, 3.604593540265007*^9}, {
   3.6221406095725393`*^9, 3.622140627505732*^9}, {3.622146240446817*^9, 
   3.622146243238419*^9}, {3.622148977142918*^9, 3.622148987205772*^9}, 
   3.628772908678434*^9, {3.628943316206661*^9, 3.62894333333554*^9}, {
   3.629284407690194*^9, 3.629284413669311*^9}, {3.645268840933076*^9, 
   3.645268896871121*^9}, {3.6452689736047993`*^9, 3.645268976348135*^9}, {
   3.645351571817296*^9, 3.645351603289547*^9}, {3.645355062626232*^9, 
   3.6453550701280327`*^9}, {3.6453551003230047`*^9, 3.645355150892003*^9}, {
   3.645356714988256*^9, 3.645356724275508*^9}, {3.645356768917329*^9, 
   3.645356769341332*^9}, {3.645358415177697*^9, 3.645358429088751*^9}, {
   3.6453589321381197`*^9, 3.6453589410824842`*^9}, {3.645363874100464*^9, 
   3.645363894555484*^9}, {3.645364159890192*^9, 3.6453641634182367`*^9}, {
   3.645544838850033*^9, 3.6455448789386597`*^9}, {3.645610163319182*^9, 
   3.645610206482841*^9}, {3.6456102499704514`*^9, 3.645610272703144*^9}, {
   3.6463008041408978`*^9, 3.64630081787363*^9}, {3.646300966224072*^9, 
   3.646300989259376*^9}, {3.6463010373959427`*^9, 3.6463010894385643`*^9}, {
   3.6463022092748203`*^9, 3.6463022563915577`*^9}, {3.646318871853992*^9, 
   3.646318874051359*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell["If all vertices of face are in list:", "Text",
 CellChangeTimes->{{3.5876766874771976`*^9, 3.58767669382759*^9}, {
   3.587676932725223*^9, 3.587676935310511*^9}, {3.5880233842939463`*^9, 
   3.5880234811214027`*^9}, {3.588060758399602*^9, 3.588060764582789*^9}, {
   3.588060840179935*^9, 3.588060959455077*^9}, {3.58806100037446*^9, 
   3.5880610158134212`*^9}, {3.604593526209601*^9, 3.604593540265007*^9}, {
   3.6221406095725393`*^9, 3.622140627505732*^9}, {3.622146240446817*^9, 
   3.622146243238419*^9}, {3.622148977142918*^9, 3.622148987205772*^9}, 
   3.628772908678434*^9, {3.628943316206661*^9, 3.62894333333554*^9}, {
   3.629284407690194*^9, 3.629284413669311*^9}, {3.645268840933076*^9, 
   3.645268896871121*^9}, {3.6452689736047993`*^9, 3.645268976348135*^9}, {
   3.645351571817296*^9, 3.645351603289547*^9}, {3.645355062626232*^9, 
   3.6453550701280327`*^9}, {3.6453551003230047`*^9, 3.645355150892003*^9}, {
   3.645356714988256*^9, 3.645356724275508*^9}, {3.645356768917329*^9, 
   3.645356769341332*^9}, {3.645358415177697*^9, 3.645358429088751*^9}, {
   3.6453589321381197`*^9, 3.6453589410824842`*^9}, {3.645363874100464*^9, 
   3.645363894555484*^9}, {3.645364159890192*^9, 3.6453641634182367`*^9}, {
   3.645544838850033*^9, 3.6455448789386597`*^9}, {3.645610163319182*^9, 
   3.645610206482841*^9}, {3.6456102499704514`*^9, 3.645610272703144*^9}, {
   3.6463008041408978`*^9, 3.64630081787363*^9}, {3.646300966224072*^9, 
   3.646300989259376*^9}, {3.6463010373959427`*^9, 3.6463010894385643`*^9}, {
   3.646318881011036*^9, 3.646318908233974*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IsFaceInListQ", "[", 
    RowBox[{"f_", ",", "vlist_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "n"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"vlist", ",", 
             RowBox[{
             "f", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
            "]"}]}], ",", 
          RowBox[{"Return", "[", "False", "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "True", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6463187210267143`*^9, 3.646318857717744*^9}, {
  3.6463189856509457`*^9, 3.646318990265156*^9}, {3.6463190219617233`*^9, 
  3.6463190255435543`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"ea5284fe-bf6b-4e0e-b5cd-6e829e13129d"],

Cell["Find all faces forming vflat:", "Text",
 CellChangeTimes->{{3.5876766874771976`*^9, 3.58767669382759*^9}, {
   3.587676932725223*^9, 3.587676935310511*^9}, {3.5880233842939463`*^9, 
   3.5880234811214027`*^9}, {3.588060758399602*^9, 3.588060764582789*^9}, {
   3.588060840179935*^9, 3.588060959455077*^9}, {3.58806100037446*^9, 
   3.5880610158134212`*^9}, {3.604593526209601*^9, 3.604593540265007*^9}, {
   3.6221406095725393`*^9, 3.622140627505732*^9}, {3.622146240446817*^9, 
   3.622146243238419*^9}, {3.622148977142918*^9, 3.622148987205772*^9}, 
   3.628772908678434*^9, {3.628943316206661*^9, 3.62894333333554*^9}, {
   3.629284407690194*^9, 3.629284413669311*^9}, {3.645268840933076*^9, 
   3.645268896871121*^9}, {3.6452689736047993`*^9, 3.645268976348135*^9}, {
   3.645351571817296*^9, 3.645351603289547*^9}, {3.645355062626232*^9, 
   3.6453550701280327`*^9}, {3.6453551003230047`*^9, 3.645355150892003*^9}, {
   3.645356714988256*^9, 3.645356724275508*^9}, {3.645356768917329*^9, 
   3.645356769341332*^9}, {3.645358415177697*^9, 3.645358429088751*^9}, {
   3.6453589321381197`*^9, 3.6453589410824842`*^9}, {3.645363874100464*^9, 
   3.645363894555484*^9}, {3.645364159890192*^9, 3.6453641634182367`*^9}, {
   3.645544838850033*^9, 3.6455448789386597`*^9}, {3.645610163319182*^9, 
   3.645610206482841*^9}, {3.6456102499704514`*^9, 3.645610272703144*^9}, {
   3.6463008041408978`*^9, 3.64630081787363*^9}, {3.646300966224072*^9, 
   3.646300989259376*^9}, {3.6463010373959427`*^9, 3.6463010894385643`*^9}, {
   3.646318881011036*^9, 3.646318934816999*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FlatFaces", "[", "vflat_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "nf", ",", 
       RowBox[{"fflat", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nf", "=", 
       RowBox[{"Length", "[", "faces", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "nf"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "=", 
          RowBox[{
          "faces", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"IsFaceInListQ", "[", 
            RowBox[{"f", ",", "vflat"}], "]"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"fflat", ",", "f"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<FlatFaces=\>\"", ",", "fflat"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "fflat", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"FlatFaces", "[", "vflatbot", "]"}], ",", 
      RowBox[{"FlatFaces", "[", "vflattop", "]"}]}], "]"}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.646318938993822*^9, 3.646319114060897*^9}, {
  3.646320697691471*^9, 3.6463207246636953`*^9}, {3.6474436795198402`*^9, 
  3.6474436830636*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"48c3b863-e3d1-49ac-81f9-0c1a2c45a3a8"],

Cell["\<\
Grow cycle by face f (if possible).
Returns {T/F, cycle}\
\>", "Text",
 CellChangeTimes->{{3.5876766874771976`*^9, 3.58767669382759*^9}, {
   3.587676932725223*^9, 3.587676935310511*^9}, {3.5880233842939463`*^9, 
   3.5880234811214027`*^9}, {3.588060758399602*^9, 3.588060764582789*^9}, {
   3.588060840179935*^9, 3.588060959455077*^9}, {3.58806100037446*^9, 
   3.5880610158134212`*^9}, {3.604593526209601*^9, 3.604593540265007*^9}, {
   3.6221406095725393`*^9, 3.622140627505732*^9}, {3.622146240446817*^9, 
   3.622146243238419*^9}, {3.622148977142918*^9, 3.622148987205772*^9}, 
   3.628772908678434*^9, {3.628943316206661*^9, 3.62894333333554*^9}, {
   3.629284407690194*^9, 3.629284413669311*^9}, {3.645268840933076*^9, 
   3.645268896871121*^9}, {3.6452689736047993`*^9, 3.645268976348135*^9}, {
   3.645351571817296*^9, 3.645351603289547*^9}, {3.645355062626232*^9, 
   3.6453550701280327`*^9}, {3.6453551003230047`*^9, 3.645355150892003*^9}, {
   3.645356714988256*^9, 3.645356724275508*^9}, {3.645356768917329*^9, 
   3.645356769341332*^9}, {3.645358415177697*^9, 3.645358429088751*^9}, {
   3.6453589321381197`*^9, 3.6453589410824842`*^9}, {3.645363874100464*^9, 
   3.645363894555484*^9}, {3.645364159890192*^9, 3.6453641634182367`*^9}, {
   3.645544838850033*^9, 3.6455448789386597`*^9}, {3.645610163319182*^9, 
   3.645610206482841*^9}, {3.6456102499704514`*^9, 3.645610272703144*^9}, {
   3.6463008041408978`*^9, 3.64630081787363*^9}, {3.646300966224072*^9, 
   3.646300989259376*^9}, {3.6463010373959427`*^9, 3.6463010894385643`*^9}, {
   3.646318881011036*^9, 3.646318934816999*^9}, {3.646319187609941*^9, 
   3.646319210534794*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GrowCycle1", "[", 
    RowBox[{"vlist_", ",", "f_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "nlist", ",", "ecyc", ",", 
       RowBox[{"match", "=", "False"}], ",", "cycle"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nlist", "=", 
       RowBox[{"Length", "[", "vlist", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Restrict", " ", "to", " ", "make", " ", "coding", " ", 
        RowBox[{"easier", ":"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "f", "]"}], "\[NotEqual]", "3"}], ",", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Error in GrowCycle: only tri faces implemented\>\"", "]"}], 
         ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cycle", "=", "vlist"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "nlist"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ecyc", "=", 
          RowBox[{"cycle", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ecyc", "\[Equal]", " ", 
            RowBox[{"f", "\[LeftDoubleBracket]", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}], "\[RightDoubleBracket]"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"match", "=", "True"}], ";", "\[IndentingNewLine]", 
            RowBox[{"cycle", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "cycle", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "f", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                "}"}], ",", 
               RowBox[{"Rest", "[", "cycle", "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         ";", 
         RowBox[{"(*", "If21", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ecyc", "\[Equal]", " ", 
            RowBox[{"f", "\[LeftDoubleBracket]", 
             RowBox[{"{", 
              RowBox[{"3", ",", "2"}], "}"}], "\[RightDoubleBracket]"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"match", "=", "True"}], ";", "\[IndentingNewLine]", 
            RowBox[{"cycle", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "cycle", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "f", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "}"}], ",", 
               RowBox[{"Rest", "[", "cycle", "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         ";", 
         RowBox[{"(*", "If32", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ecyc", "\[Equal]", " ", 
            RowBox[{"f", "\[LeftDoubleBracket]", 
             RowBox[{"{", 
              RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"match", "=", "True"}], ";", "\[IndentingNewLine]", 
            RowBox[{"cycle", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "cycle", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "f", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "}"}], ",", 
               RowBox[{"Rest", "[", "cycle", "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         ";", 
         RowBox[{"(*", "If13", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"cycle", "=", 
          RowBox[{"RotateLeft", "[", "cycle", "]"}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<GrowCycle1:{f,match}=\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "match"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"match", ",", "cycle"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GrowCycle1", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "6", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "8"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.646319225279256*^9, 3.64631930134098*^9}, {
  3.6463193680200043`*^9, 3.646319454249332*^9}, {3.64631952740948*^9, 
  3.6463200129244003`*^9}, {3.646320079274024*^9, 3.646320082919725*^9}, {
  3.646320771721732*^9, 3.6463208166854553`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"dc8d2193-d822-4dbb-b5ec-ee17f69b16b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "8", ",", "1", ",", "6", ",", "2"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.646319921674192*^9, 3.646319986443844*^9}, 
   3.646320084356546*^9, 3.64632081779305*^9, 3.646499727742114*^9, 
   3.6468212919813337`*^9, 3.646912161670491*^9, 3.647033482707447*^9, 
   3.647252426753107*^9, 3.647263014470263*^9, 3.647336133919808*^9, 
   3.6473469500221357`*^9, 3.6474437217522783`*^9, 3.647515937230486*^9, 
   3.649346663326379*^9, 3.6494090062764063`*^9, 3.650557858339232*^9, 
   3.655739787421603*^9, 3.657301714844654*^9, 3.65866101733494*^9, 
   3.658831813840357*^9, 3.673020283376289*^9, 3.673372851083643*^9, 
   3.6740510716424923`*^9, 3.674115512100007*^9, 3.674120007953928*^9, 
   3.675434738427408*^9, 3.675443425482424*^9, 3.675522186233055*^9, 
   3.6756268572762403`*^9, 3.6757593314014273`*^9, 3.675764990947806*^9, 
   3.6757670326137047`*^9, 3.6757717976477327`*^9, 3.6757772219554358`*^9, 
   3.675785170822432*^9, 3.675788814133013*^9, 3.67578961000072*^9, 
   3.676976753889769*^9, 3.677250402434059*^9, 3.692819906496517*^9, 
   3.693072239365242*^9, 3.7005719317796917`*^9, 3.702389575272884*^9, 
   3.702579257272703*^9, 3.702895172185658*^9, 3.70472379372139*^9, 
   3.704724154977827*^9, 3.748074169169846*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"c9cc92c6-8c3d-4e8e-a289-4c85ce6436ce"]
}, Open  ]],

Cell["\<\
Start with any face in fflat. Remove. Grow by each other, until empty.\
\>", "Text",
 CellChangeTimes->{{3.5876766874771976`*^9, 3.58767669382759*^9}, {
   3.587676932725223*^9, 3.587676935310511*^9}, {3.5880233842939463`*^9, 
   3.5880234811214027`*^9}, {3.588060758399602*^9, 3.588060764582789*^9}, {
   3.588060840179935*^9, 3.588060959455077*^9}, {3.58806100037446*^9, 
   3.5880610158134212`*^9}, {3.604593526209601*^9, 3.604593540265007*^9}, {
   3.6221406095725393`*^9, 3.622140627505732*^9}, {3.622146240446817*^9, 
   3.622146243238419*^9}, {3.622148977142918*^9, 3.622148987205772*^9}, 
   3.628772908678434*^9, {3.628943316206661*^9, 3.62894333333554*^9}, {
   3.629284407690194*^9, 3.629284413669311*^9}, {3.645268840933076*^9, 
   3.645268896871121*^9}, {3.6452689736047993`*^9, 3.645268976348135*^9}, {
   3.645351571817296*^9, 3.645351603289547*^9}, {3.645355062626232*^9, 
   3.6453550701280327`*^9}, {3.6453551003230047`*^9, 3.645355150892003*^9}, {
   3.645356714988256*^9, 3.645356724275508*^9}, {3.645356768917329*^9, 
   3.645356769341332*^9}, {3.645358415177697*^9, 3.645358429088751*^9}, {
   3.6453589321381197`*^9, 3.6453589410824842`*^9}, {3.645363874100464*^9, 
   3.645363894555484*^9}, {3.645364159890192*^9, 3.6453641634182367`*^9}, {
   3.645544838850033*^9, 3.6455448789386597`*^9}, {3.645610163319182*^9, 
   3.645610206482841*^9}, {3.6456102499704514`*^9, 3.645610272703144*^9}, {
   3.6463008041408978`*^9, 3.64630081787363*^9}, {3.646300966224072*^9, 
   3.646300989259376*^9}, {3.6463010373959427`*^9, 3.6463010894385643`*^9}, {
   3.646318881011036*^9, 3.646318934816999*^9}, {3.646319187609941*^9, 
   3.646319210534794*^9}, {3.646320031161927*^9, 3.64632006738483*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FlatCycle", "[", "vflat_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fflat", ",", "cycle", ",", "failsafe", ",", "k", ",", "bool"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"failsafe", "=", 
       RowBox[{"Length", "[", "faces", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fflat", "=", 
       RowBox[{"FlatFaces", "[", "vflat", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cycle", "=", 
       RowBox[{
       "fflat", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
      RowBox[{"fflat", "=", 
       RowBox[{"Rest", "[", "fflat", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "fflat", "]"}], ">", "0"}], ")"}], "&&", 
         RowBox[{"(", 
          RowBox[{"k", "<", "failsafe"}], ")"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"bool", ",", "cycle"}], "}"}], "=", 
          RowBox[{"GrowCycle1", "[", 
           RowBox[{"cycle", ",", 
            RowBox[{
            "fflat", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
            "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"bool", ",", "\[IndentingNewLine]", 
           RowBox[{"fflat", "=", 
            RowBox[{"Rest", "[", "fflat", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"fflat", "=", 
            RowBox[{"RotateLeft", "[", "fflat", "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], ";", 
         RowBox[{"(*", "Ifgrown", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<FlatCycle:cycle=\>\"", ",", "cycle"}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"k", "++"}]}]}], "]"}], ";", 
      RowBox[{"(*", "While", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "cycle", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"debug", "=", "True"}], ";", 
    RowBox[{"FlatCycle", "[", "vflatbot", "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.646320114166354*^9, 3.646320173573369*^9}, {
  3.646320245242794*^9, 3.646320623122711*^9}, {3.646320662975322*^9, 
  3.646320688066086*^9}, {3.646320882181514*^9, 3.646320920775701*^9}, {
  3.64734693449901*^9, 3.647346938276401*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"a6ecbf7d-ba2a-4caf-bf56-b0d1b7812775"],

Cell[TextData[{
 "FlatCycle[vflat] working.\nPlan: in ",
 StyleBox["SpiralUnf.nb",
  FontWeight->"Bold"],
 ", if flatbot, reverse, and skip ConePath.\nSo this should be done in \
SpiralAllBands."
}], "Text",
 CellChangeTimes->{{3.5876766874771976`*^9, 3.58767669382759*^9}, {
   3.587676932725223*^9, 3.587676935310511*^9}, {3.5880233842939463`*^9, 
   3.5880234811214027`*^9}, {3.588060758399602*^9, 3.588060764582789*^9}, {
   3.588060840179935*^9, 3.588060959455077*^9}, {3.58806100037446*^9, 
   3.5880610158134212`*^9}, {3.604593526209601*^9, 3.604593540265007*^9}, {
   3.6221406095725393`*^9, 3.622140627505732*^9}, {3.622146240446817*^9, 
   3.622146243238419*^9}, {3.622148977142918*^9, 3.622148987205772*^9}, 
   3.628772908678434*^9, {3.628943316206661*^9, 3.62894333333554*^9}, {
   3.629284407690194*^9, 3.629284413669311*^9}, {3.645268840933076*^9, 
   3.645268896871121*^9}, {3.6452689736047993`*^9, 3.645268976348135*^9}, {
   3.645351571817296*^9, 3.645351603289547*^9}, {3.645355062626232*^9, 
   3.6453550701280327`*^9}, {3.6453551003230047`*^9, 3.645355150892003*^9}, {
   3.645356714988256*^9, 3.645356724275508*^9}, {3.645356768917329*^9, 
   3.645356769341332*^9}, {3.645358415177697*^9, 3.645358429088751*^9}, {
   3.6453589321381197`*^9, 3.6453589410824842`*^9}, {3.645363874100464*^9, 
   3.645363894555484*^9}, {3.645364159890192*^9, 3.6453641634182367`*^9}, {
   3.645544838850033*^9, 3.6455448789386597`*^9}, {3.645610163319182*^9, 
   3.645610206482841*^9}, {3.6456102499704514`*^9, 3.645610272703144*^9}, {
   3.6463008041408978`*^9, 3.64630081787363*^9}, {3.646300966224072*^9, 
   3.646300989259376*^9}, {3.6463010373959427`*^9, 3.6463010894385643`*^9}, {
   3.646318881011036*^9, 3.646318934816999*^9}, {3.646319187609941*^9, 
   3.646319210534794*^9}, {3.646320031161927*^9, 3.64632006738483*^9}, {
   3.646321069874761*^9, 3.646321085015897*^9}, {3.646321253283639*^9, 
   3.646321308871303*^9}, {3.6463213853985167`*^9, 3.6463214038916607`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["\<\
Addtion 23Nov15: IncidentEdges[vi_]. Edges remain individually sorted. Not in \
ccw order: just a list.\
\>", "Text",
 CellChangeTimes->{{3.64578303572208*^9, 3.645783064364355*^9}, {
  3.6458029675612717`*^9, 3.64580298132803*^9}, {3.657294916669807*^9, 
  3.657294931021162*^9}, {3.6572950649749937`*^9, 3.657295075406067*^9}, {
  3.675371401789106*^9, 3.675371429641716*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IncidentEdges", "[", "vi_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"eincident", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "edges", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{
            "edges", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            ",", "vi"}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"eincident", ",", 
            RowBox[{
            "edges", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
            "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"eincident", "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Error IncidentEdges: {}forvi=\>\"", ",", "vi"}], "]"}],
          ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "eincident", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.657294936755919*^9, 3.657295052958291*^9}, {
  3.657295085485466*^9, 3.657295126917624*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"dcd77861-3400-4c7e-a772-971c864df014"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.675371433421688*^9, 3.675371447683662*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"55df649a-d12e-4cd4-8268-4559bbe63f08"],

Cell[TextData[{
 "New 19Jun 2016.\nUse ",
 StyleBox["vadjccws",
  FontSlant->"Italic"],
 " to find Star[",
 StyleBox["vi",
  FontSlant->"Italic"],
 "], the list of vertex indices of the polygon around ",
 StyleBox["vi",
  FontSlant->"Italic"],
 ", all the opposite edges of the triangles incident to ",
 StyleBox["vi",
  FontSlant->"Italic"],
 ", which are given by ",
 StyleBox["vadjccws",
  FontSlant->"Italic"],
 ".\n\nOppositeEdge[fi,vi] gives {vi1,vi2} in ccw order for f={vi,vi1,vi2}.\n",
 StyleBox["Verified as working 20Jun16.\n\n",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 "Obtuse[vi] moved here: Boolean if some angle incident to vi is obtuse."
}], "Text",
 CellChangeTimes->{{3.5876766874771976`*^9, 3.58767669382759*^9}, {
   3.587676932725223*^9, 3.587676935310511*^9}, {3.5880233842939463`*^9, 
   3.5880234811214027`*^9}, {3.588060758399602*^9, 3.588060764582789*^9}, {
   3.588060840179935*^9, 3.588060959455077*^9}, {3.58806100037446*^9, 
   3.5880610158134212`*^9}, {3.604593526209601*^9, 3.604593540265007*^9}, {
   3.6221406095725393`*^9, 3.622140627505732*^9}, {3.622146240446817*^9, 
   3.622146243238419*^9}, {3.622148977142918*^9, 3.622148987205772*^9}, 
   3.628772908678434*^9, {3.628943316206661*^9, 3.62894333333554*^9}, {
   3.629284407690194*^9, 3.629284413669311*^9}, {3.645268840933076*^9, 
   3.645268896871121*^9}, {3.6452689736047993`*^9, 3.645268976348135*^9}, {
   3.645351571817296*^9, 3.645351603289547*^9}, {3.645355062626232*^9, 
   3.6453550701280327`*^9}, {3.6453551003230047`*^9, 3.645355150892003*^9}, {
   3.645356714988256*^9, 3.645356724275508*^9}, {3.645356768917329*^9, 
   3.645356769341332*^9}, {3.645358415177697*^9, 3.645358429088751*^9}, {
   3.6453589321381197`*^9, 3.6453589410824842`*^9}, {3.645363874100464*^9, 
   3.645363894555484*^9}, {3.645364159890192*^9, 3.6453641634182367`*^9}, {
   3.645544838850033*^9, 3.6455448789386597`*^9}, {3.645610163319182*^9, 
   3.645610206482841*^9}, {3.6456102499704514`*^9, 3.645610272703144*^9}, {
   3.6463008041408978`*^9, 3.64630081787363*^9}, {3.646300966224072*^9, 
   3.646300989259376*^9}, {3.6463010373959427`*^9, 3.6463010894385643`*^9}, {
   3.646318881011036*^9, 3.646318934816999*^9}, {3.646319187609941*^9, 
   3.646319210534794*^9}, {3.646320031161927*^9, 3.64632006738483*^9}, {
   3.646321069874761*^9, 3.646321085015897*^9}, {3.646321253283639*^9, 
   3.646321308871303*^9}, {3.6463213853985167`*^9, 3.6463214038916607`*^9}, {
   3.6753714450106783`*^9, 3.675371542665938*^9}, {3.675371925460389*^9, 
   3.675371967468486*^9}, {3.675436445991391*^9, 3.675436458197412*^9}, {
   3.675626971809716*^9, 3.675626979550393*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Obtuse", "[", "vi_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"angs", ",", "maxang", ",", "ob"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"bverts", ",", "vi"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"debug", ",", 
           RowBox[{"Print", "[", "\"\<Obtuse:vi in bverts\>\"", "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "False", "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"angs", " ", "=", " ", 
       RowBox[{"IncidAngsVi", "[", "vi", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"maxang", "=", 
       RowBox[{"Max", "[", "angs", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ob", " ", "=", " ", 
       RowBox[{"(", " ", 
        RowBox[{"maxang", ">", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], "+", "FUZZ"}], ")"}]}], " ", ")"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Obtuse: maxang=\>\"", ",", 
          RowBox[{"maxang", " ", "RadDeg"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "ob", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"debug", "=", "True"}], ";", " ", 
    RowBox[{"Obtuse", "[", "14", "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.675458422550949*^9, 3.675458650644424*^9}, 
   3.6754587418679943`*^9, {3.675458787305751*^9, 3.675458923319908*^9}, 
   3.675459289155693*^9, {3.675522271862999*^9, 3.675522278939088*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"68a0600d-9160-422b-a26a-4c195926f5db"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OppEdgeVi", "[", 
    RowBox[{"fi_", ",", "vi_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "=", 
       RowBox[{
       "faces", "\[LeftDoubleBracket]", "fi", "\[RightDoubleBracket]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"f", ",", "vi"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Error OppEdgeVi:{f,vi}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"f", ",", "vi"}], "}"}]}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "\[NotEqual]", "vi"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "=", 
          RowBox[{"RotateLeft", "[", "f", "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "While", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"f", "\[LeftDoubleBracket]", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], "]"}]}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.675371887396957*^9, 3.675371918396699*^9}, {
  3.675371976601646*^9, 3.675372185052019*^9}, {3.6754434069395*^9, 
  3.675443413164612*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"83c41ea7-7dc1-4c23-9897-4199de043421"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Star", "[", "vi_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vadj", ",", "i", ",", "nvadj", ",", "fi", ",", "e", ",", 
       RowBox[{"star", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vadj", "=", " ", 
       RowBox[{"FacesIncidVert", "[", "vi", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nvadj", "=", 
       RowBox[{"Length", "[", "vadj", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Star:vi=\>\"", ",", "vi", ",", "\"\<:vadj=\>\"", ",", "vadj"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "nvadj"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fi", "=", 
          RowBox[{
          "vadj", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"e", "=", 
          RowBox[{"OppEdgeVi", "[", 
           RowBox[{"fi", ",", "vi"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Star:e=\>\"", ",", "e"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"star", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"star", "=", "e"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"star", "\[LeftDoubleBracket]", 
                RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "\[NotEqual]", 
               
               RowBox[{
               "e", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              ",", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{"\"\<Error Star:{star,e}=\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"star", ",", "e"}], "}"}]}], "]"}], ";", 
               RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"star", ",", 
              RowBox[{
              "e", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Should", " ", "repeat", " ", "last"}], "\[Equal]", 
        RowBox[{"first", ":"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"star", "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "\[Equal]", 
         RowBox[{
         "star", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"star", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{"star", ",", 
           RowBox[{"-", "1"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "star", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6753715700520153`*^9, 3.675371581741693*^9}, {
   3.675371713530643*^9, 3.6753717936806307`*^9}, {3.675371826134036*^9, 
   3.675371842181594*^9}, {3.6753721946888523`*^9, 3.675372196532859*^9}, {
   3.675372229075837*^9, 3.675372307728492*^9}, {3.675373366587702*^9, 
   3.67537349020615*^9}, {3.675373530742116*^9, 3.675373599219446*^9}, {
   3.675373670504714*^9, 3.675373691552603*^9}, {3.6753737410147*^9, 
   3.675373754358927*^9}, {3.6753738026690063`*^9, 3.675373802965331*^9}, {
   3.6754357927942944`*^9, 3.67543579473664*^9}, {3.675436033524959*^9, 
   3.675436052561908*^9}, {3.6754361437397413`*^9, 3.67543617650392*^9}, 
   3.675443417205284*^9, {3.675592316041203*^9, 3.6755923219910927`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"b9030867-7a00-4150-8f1e-1cdba9779333"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.677255405664424*^9, 3.677255411990695*^9}, {
   3.677255443934828*^9, 3.677255456886223*^9}, 3.677255496870881*^9},
 CellLabel->
  "In[152]:=",ExpressionUUID->"3b43d3dd-1585-4c85-94bc-01049feb596a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IncidAngsVi", "[", "vi_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vadj", ",", "nvadj", ",", "f", ",", "fang", ",", 
       RowBox[{"angs", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vadj", "=", " ", 
       RowBox[{"FacesIncidVert", "[", "vi", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nvadj", "=", 
       RowBox[{"Length", "[", "vadj", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Star:vadj=\>\"", ",", "vadj"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "nvadj"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fi", "=", 
          RowBox[{
          "vadj", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"fang", "=", 
          RowBox[{
          "fangs", "\[LeftDoubleBracket]", "fi", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"f", "=", 
          RowBox[{
          "faces", "\[LeftDoubleBracket]", "fi", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"f", ",", "vi"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Error IncidAngsVi:{f,vi}=\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"f", ",", "vi"}], "}"}]}], "]"}], ";", 
            RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"While", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
            "f", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[NotEqual]", "vi"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"f", " ", "&"}], " ", "fang", " ", "in", " ", 
             "concert"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"f", "=", 
             RowBox[{"RotateLeft", "[", "f", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"fang", "=", 
             RowBox[{"RotateLeft", "[", "fang", "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", 
         RowBox[{"(*", "While", "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"angs", ",", 
           RowBox[{
           "fang", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "angs", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6754434714438667`*^9, 3.675443731140093*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"2fa94751-620f-4be3-8778-9abdc6f6e483"],

Cell["\<\
This take from UnfoldCapSphere.nb.
SharedEdge[f1_,f2_]: find the unique edge shared by two adj faces.
Returned e is not sorted, but instead follows f1\[CloseCurlyQuote]s ccw \
ordering.
f1={2,3,1} e.g.: indices.\
\>", "Text",
 CellChangeTimes->{{3.587676669800293*^9, 3.587676679175981*^9}, {
   3.5882813994893217`*^9, 3.5882814004414797`*^9}, {3.58828153601947*^9, 
   3.5882815410038652`*^9}, {3.588667289975422*^9, 3.588667295718833*^9}, {
   3.588764870465296*^9, 3.588764878580879*^9}, {3.589470177485044*^9, 
   3.589470186265538*^9}, {3.5906869871720133`*^9, 3.590686988656824*^9}, {
   3.592834248151424*^9, 3.592834261080572*^9}, {3.592834422588798*^9, 
   3.592834451657814*^9}, {3.60692923781389*^9, 3.606929260060104*^9}, {
   3.606929623851017*^9, 3.606929714102075*^9}, {3.616174677084201*^9, 
   3.6161746816166687`*^9}, {3.616174849464655*^9, 3.6161748985116377`*^9}, {
   3.6161749611348267`*^9, 3.61617499767986*^9}, {3.616175038169949*^9, 
   3.6161750483997087`*^9}, {3.61617509001591*^9, 3.6161751329678173`*^9}, {
   3.616176586282214*^9, 3.6161766332312*^9}, {3.6161873661714973`*^9, 
   3.616187425384837*^9}, {3.616518714304673*^9, 3.616518717087946*^9}, 
   3.656950487600408*^9, {3.656950692578274*^9, 3.6569507036521273`*^9}, {
   3.6570242754817963`*^9, 3.6570243249584703`*^9}, {3.671981815391124*^9, 
   3.671981824461563*^9}, {3.692891150227994*^9, 3.692891174113287*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SharedEdge", "[", 
    RowBox[{"f1_", ",", "f2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "i1", ",", "j", ",", "j1", ",", 
       RowBox[{"e", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"e", "=", 
       RowBox[{"Catch", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", 
            RowBox[{"Length", "[", "f1", "]"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "<", 
               RowBox[{"Length", "[", "f1", "]"}]}], ",", 
              RowBox[{"i1", "=", 
               RowBox[{"i", "+", "1"}]}], ",", 
              RowBox[{"i1", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", 
               RowBox[{"Length", "[", "f2", "]"}]}], ",", 
              RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"j", "<", 
                  RowBox[{"Length", "[", "f2", "]"}]}], ",", 
                 RowBox[{"j1", "=", 
                  RowBox[{"j", "+", "1"}]}], ",", 
                 RowBox[{"j1", "=", "1"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"Reverse", " ", 
                 RowBox[{"f2", ":"}]}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"f1", "\[LeftDoubleBracket]", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "i1"}], "}"}], 
                   "\[RightDoubleBracket]"}], "\[Equal]", 
                  RowBox[{"f2", "\[LeftDoubleBracket]", 
                   RowBox[{"{", 
                    RowBox[{"j1", ",", "j"}], "}"}], 
                   "\[RightDoubleBracket]"}]}], ",", 
                 RowBox[{
                  RowBox[{"e", "=", 
                   RowBox[{"f1", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "i1"}], "}"}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                  RowBox[{"Throw", "[", "e", "]"}]}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], 
          RowBox[{"(*", "Forj", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
         RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"e", "=", "0"}]}], " ", 
        RowBox[{"(*", 
         RowBox[{"Never", " ", "thrown"}], "*)"}], "\[IndentingNewLine]", 
        "]"}]}], ";", 
      RowBox[{"(*", "Catch", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"e", "\[Equal]", "0"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Error SharedEdge:{f1,f2} no share:\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"f1", ",", "f2"}], "}"}]}], "]"}]}], "]"}], ";", 
      RowBox[{"(*", "IfError", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Do", " ", 
        StyleBox["not",
         FontSlant->"Italic"], " ", 
        RowBox[{"sort", ":", " ", 
         RowBox[{"need", " ", "ordering", " ", 
          RowBox[{"later", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "e", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SharedEdge", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6166765300768337`*^9, 3.6166767458677197`*^9}, {
   3.616676801022358*^9, 3.616676807771867*^9}, {3.616676850228133*^9, 
   3.616676996632769*^9}, {3.616677047365415*^9, 3.616677091382534*^9}, 
   3.61667739879491*^9, {3.616677527686448*^9, 3.616677534427833*^9}, {
   3.6569506743447657`*^9, 3.6569506846240463`*^9}, {3.65695073713983*^9, 
   3.656950791097035*^9}, {3.65695288900751*^9, 3.656952904980754*^9}, {
   3.671385207721167*^9, 3.671385228649083*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"27394e0f-a525-46e1-9b83-7d7f5e735ea3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.616677056473975*^9, 3.6166770922463818`*^9}, 
   3.6166774001867437`*^9, 3.6569530780135527`*^9, 3.6570243284967003`*^9, 
   3.657729802603479*^9, 3.658661058724884*^9, 3.658831886926943*^9, 
   3.659567492965493*^9, {3.659610277623171*^9, 3.659610282572254*^9}, {
   3.6713852129395514`*^9, 3.671385230343412*^9}, 3.672046447737668*^9, 
   3.6928911934428596`*^9, 3.693072239543737*^9, 3.700571932096588*^9, 
   3.702389575470997*^9, 3.702579257555496*^9, 3.702895172353683*^9, 
   3.704723793983283*^9, 3.704724155152233*^9, 3.748074169265794*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"81e9eb2d-059f-4e7a-acf1-3cf6ec443bdf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Getvadjccws", "[", "vi_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "i", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "vadjccws", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"vi", "\[Equal]", 
            RowBox[{
             RowBox[{
             "vadjccws", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", 
            RowBox[{
             RowBox[{
             "vadjccws", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
             "\[RightDoubleBracket]"}], "]"}]}], "\[IndentingNewLine]", "]"}],
          ";"}]}], 
       RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
      RowBox[{"(*", "Fori", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<Error Getvadjccws\>\"", "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6929017242391777`*^9, 3.69290188561417*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"10b364d7-8c39-416b-b7fc-8815697f75e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["New:29Apr2017. Needed in ExtendFaces.nb, but pure DS.", "Subsubsection",
 CellChangeTimes->{{3.702222217462517*^9, 3.702222235145762*^9}, {
  3.7024690871864223`*^9, 3.702469105911707*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"04b5746f-d944-4ce2-98de-202126cea431"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BoundaryFaces", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "fi", ",", "f", ",", "f1", ",", "f2", ",", "e", ",", "e1", 
        ",", "e2", ",", 
        RowBox[{"bfacesccw", "=", 
         RowBox[{"{", "}"}]}], ",", "bei", ",", "be"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"bei", "=", "1"}], ",", 
         RowBox[{"bei", "\[LessEqual]", 
          RowBox[{"Length", "[", "bedgesccw", "]"}]}], ",", 
         RowBox[{"bei", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"be", "=", 
           RowBox[{
           "bedgesccw", "\[LeftDoubleBracket]", "bei", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", 
             RowBox[{"Length", "[", "fiup", "]"}]}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fi", "=", 
              RowBox[{
              "fiup", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"f", " ", "=", " ", 
              RowBox[{
              "faces", "\[LeftDoubleBracket]", "fi", 
               "\[RightDoubleBracket]"}]}], ";", 
             RowBox[{"e", "=", 
              RowBox[{"f", "\[LeftDoubleBracket]", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"f1", "=", 
              RowBox[{"RotateLeft", "[", "f", "]"}]}], ";", 
             RowBox[{"e1", "=", 
              RowBox[{"f1", "\[LeftDoubleBracket]", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"f2", "=", 
              RowBox[{"RotateLeft", "[", "f1", "]"}]}], ";", 
             RowBox[{"e2", "=", 
              RowBox[{"f2", "\[LeftDoubleBracket]", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"be", "\[Equal]", "e"}], ")"}], "||", 
                RowBox[{"(", 
                 RowBox[{"be", "\[Equal]", "e1"}], ")"}], "||", 
                RowBox[{"(", 
                 RowBox[{"be", "\[Equal]", "e2"}], ")"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"bfacesccw", ",", "fi"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}],
              ";"}]}], 
           RowBox[{"(*", "If", "*)"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        
        RowBox[{"(*", "Forfi", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
       RowBox[{"(*", "Forbei", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "bfacesccw", "]"}], "\[NotEqual]", 
          RowBox[{"Length", "[", "bedgesccw", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Error BoundaryFaces:|bfacesccw|=\>\"", ",", 
           RowBox[{"Length", "[", "bfacesccw", "]"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"DeleteDuplicates", "[", "bfacesccw", "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Global", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"bfaces", "=", 
    RowBox[{"BoundaryFaces", "[", "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7008241963156147`*^9, 3.7008244915277042`*^9}, {
   3.700824525144096*^9, 3.700824604188817*^9}, {3.700824682648635*^9, 
   3.700824848320101*^9}, {3.700831456347542*^9, 3.700831459208125*^9}, {
   3.700831509607358*^9, 3.700831511789137*^9}, 3.7024690574581747`*^9, {
   3.7047246983423843`*^9, 3.704724701931954*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"6d962b89-76b0-4201-9cad-68da8d19d0cd"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Moved", " ", 
        RowBox[{"PrintDS", "[", "]"}], " ", "to", " ", 
        RowBox[{"here", ".", " ", "I"}], " ", "think", " ", "need", " ", "to",
         " ", "specify", " ", "centi"}], " ", "&"}], " ", "bverts"}], " ", 
     "&"}], " ", "other", " ", "vars"}], "..."}], "*)"}]], "Input",
 CellChangeTimes->{{3.7141242248822927`*^9, 3.714124283220997*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"293150c0-755d-4a69-9522-f261d958cbbe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PrintDS", "[", "labels_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nv", ",", "ne", ",", "nf", ",", "g", ",", "cent", ",", "ncycs"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nv", ",", "ne", ",", "nf"}], "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"verts3d", ",", "edges", ",", "faces"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<=>PrintDS: Full polyh DS:V-E+F=\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"nv", ",", "ne", ",", "nf"}], "}"}], ",", "\"\<=\>\"", ",", 
        RowBox[{"nv", "-", "ne", "+", "nf"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<#{bverts,intverts,bedges,fiup}=\>\"", ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"bverts", ",", "intverts", ",", "bedgesccw", ",", "fiup"}],
            "}"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<bverts=\>\"", ",", "bverts"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<intverts=\>\"", ",", "intverts"}], "]"}], ";"}], "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<#{bedgesccw,vadjccwsb}=\>\"", ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"bedgesccw", ",", "vadjccwsb"}], "}"}]}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<#bverts=#bedges:\>\"", ",", 
        RowBox[{
         RowBox[{"Length", "[", "bverts", "]"}], "\[Equal]", 
         RowBox[{"Length", "[", "bedgesccw", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<#bverts=#vadjccwsb:\>\"", ",", 
        RowBox[{
         RowBox[{"Length", "[", "bverts", "]"}], "\[Equal]", 
         RowBox[{"Length", "[", "vadjccwsb", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
      "Print", "[", "\"\<bedges&badjfaces indexed in synch:\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<bedges=\>\"", ",", "bedges"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<badjfaces=\>\"", ",", "badjfaces"}], "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<#{bedges,badjfaces}=\>\"", ",", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"bedges", ",", "badjfaces"}], "}"}]}], "]"}]}], "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Axes", ":"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ValueQ", "[", "centi", "]"}], "&&", 
              RowBox[{"(", 
               RowBox[{"centi", ">", "0"}], ")"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Purple", ",", "Thick", ",", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "verts3d", "\[LeftDoubleBracket]", "centi", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                   RowBox[{
                   "verts3d", "\[LeftDoubleBracket]", "centi", 
                    "\[RightDoubleBracket]"}], "+", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], "/", "2"}]}]}], 
                 "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Npole", ":"}], "*)"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.85", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"GraphicsComplex", "[", "\[IndentingNewLine]", 
              RowBox[{"verts3d", ",", "\[IndentingNewLine]", 
               RowBox[{"Polygon", "[", 
                RowBox[{
                "faces", "\[LeftDoubleBracket]", "fiup", 
                 "\[RightDoubleBracket]"}], "]"}]}], "\[IndentingNewLine]", 
              "]"}]}], "}"}], "\[IndentingNewLine]", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ValueQ", "[", "bfaces", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", "Thick", ",", 
               RowBox[{"TriNormals", "[", "bfaces", "]"}]}], "}"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{",", 
             RowBox[{"{", 
              RowBox[{"LightGreen", ",", 
               RowBox[{"Polygon", "[", 
                RowBox[{"verts3d", "\[LeftDoubleBracket]", 
                 RowBox[{"faces", "\[LeftDoubleBracket]", 
                  RowBox[{"First", "[", "grcenter", "]"}], 
                  "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                "]"}]}], "}"}]}], "*)"}], "\[IndentingNewLine]", ",", 
           RowBox[{"If", "[", 
            RowBox[{"labels", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", 
               RowBox[{"VertsLabels", "[", "fiup", "]"}], ",", "Red", ",", 
               RowBox[{"TriLabels", "[", "fiup", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ValueQ", "[", "bverts", "]"}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Length", "[", "bverts", "]"}], ">", "0"}], ")"}]}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Green", ",", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"PointSize", "[", "Medium", "]"}], ","}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"Point", "[", 
                  RowBox[{
                  "verts3d", "\[LeftDoubleBracket]", "bverts", 
                   "\[RightDoubleBracket]"}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{
                    "verts3d", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}], "]"}], "&"}], ",", 
                   "bedgesccw"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
               
               RowBox[{"{", 
                RowBox[{"Magenta", ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Tube", "[", 
                    RowBox[{
                    "verts3d", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}], "]"}], "&"}], ",", "ecuts"}], 
                  "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"highlight", " ", "isolated", " ", 
                 RowBox[{"verts", ":"}]}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"White", ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{
                  "verts3d", "\[LeftDoubleBracket]", "visolated", 
                   "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], 
           RowBox[{"(*", "Ifbverts", "*)"}], "\[IndentingNewLine]", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"centi", ">", "0"}], ",", 
             RowBox[{"{", 
              RowBox[{"White", ",", 
               RowBox[{"Sphere", "[", 
                RowBox[{
                 RowBox[{
                 "verts3d", "\[LeftDoubleBracket]", "centi", 
                  "\[RightDoubleBracket]"}], ",", "0.02"}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{"Axes", "\[Rule]", "True"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], 
             "}"}]}]}], "*)"}], "\[IndentingNewLine]", ",", 
         RowBox[{"Boxed", "\[Rule]", "False"}], "\[IndentingNewLine]", ",", 
         RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "g", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Hack", " ", "in", " ", "global", " ", "for", " ", "debugging"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"gcapsave", "=", "g"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"2", "D", " ", "version"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{
         "Currently", " ", "not", " ", "working", " ", "for", " ", "3", 
          RowBox[{"D", ".", " ", "verts2d"}], " ", "incomplete"}], "..."}],
        FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ValueQ", "[", "verts2d", "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{"if", " ", "defined"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"g2dcuts", "=", 
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
                  RowBox[{"FaceForm", "[", "LightBlue", "]"}], ",", 
                  RowBox[{"GraphicsComplex", "[", 
                   RowBox[{"verts2d", ",", 
                    RowBox[{"Polygon", "[", 
                    RowBox[{
                    "faces", "\[LeftDoubleBracket]", "fiup", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Green", ",", 
                  RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{
                   "verts2d", "\[LeftDoubleBracket]", "bverts", 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{
                    "verts2d", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}], "]"}], "&"}], ",", 
                    "bedgesccw"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"labels", ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"Blue", ",", 
                    RowBox[{"VertsLabels2", "[", "fiup", "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Red", ",", "Thick", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{
                    "verts2d", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}], "]"}], "&"}], ",", "ecuts"}], 
                   "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"highlight", " ", "isolated", " ", 
                  RowBox[{"verts", ":"}]}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Yellow", ",", 
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{
                   "verts2d", "\[LeftDoubleBracket]", "visolated", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], 
               "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", "g2dcuts", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], 
       RowBox[{"(*", "If2D", "*)"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ncycs", ",", "grcenter"}], "}"}], "=", 
         RowBox[{"DualGraph", "[", "fiup", "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"Leave", " ", "grcenter", " ", "global"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<#{ncycs,intverts}=\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"ncycs", ",", 
            RowBox[{"Length", "[", "intverts", "]"}]}], "}"}], ",", 
          "\"\<:\>\"", ",", 
          RowBox[{"ncycs", "==", 
           RowBox[{"Length", "[", "intverts", "]"}]}]}], "]"}], ";"}], "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<<=PrintDS\>\"", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"PrintDS", "[", "labels", "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.656258187005097*^9, 3.656258196670101*^9}, {
   3.6562583508943443`*^9, 3.656258439678307*^9}, {3.6562584713744183`*^9, 
   3.656258551359254*^9}, {3.656259507887074*^9, 3.6562597020145617`*^9}, {
   3.656259772960268*^9, 3.65625977378249*^9}, {3.656259817479145*^9, 
   3.656259828950301*^9}, {3.656259866335279*^9, 3.65625998305643*^9}, {
   3.6562600175276833`*^9, 3.656260066222736*^9}, {3.65626060121587*^9, 
   3.6562606445112886`*^9}, {3.656260683992075*^9, 3.656260690574993*^9}, {
   3.656260820543818*^9, 3.656260830105239*^9}, {3.656261790343925*^9, 
   3.656261808919231*^9}, {3.656262449168516*^9, 3.656262474192141*^9}, {
   3.656262510776803*^9, 3.6562625114395437`*^9}, {3.656262782672583*^9, 
   3.6562627884634743`*^9}, {3.6562628694644337`*^9, 3.656262901463805*^9}, {
   3.6562631769136133`*^9, 3.6562632673357553`*^9}, {3.6568605627311373`*^9, 
   3.656860565546701*^9}, {3.6568613732987537`*^9, 3.656861380842917*^9}, {
   3.657028280903729*^9, 3.657028312668454*^9}, {3.65702844595919*^9, 
   3.6570284535650473`*^9}, {3.657385570581131*^9, 3.657385607217046*^9}, {
   3.657798038815957*^9, 3.657798041813833*^9}, {3.657798345297526*^9, 
   3.657798401052825*^9}, {3.657798437755783*^9, 3.657798465865685*^9}, {
   3.657798538864028*^9, 3.657798577934634*^9}, {3.657814000332014*^9, 
   3.6578140045131598`*^9}, {3.6579009319369307`*^9, 3.657900937334038*^9}, {
   3.658663885583374*^9, 3.658663916891634*^9}, {3.65866540477803*^9, 
   3.6586654598939247`*^9}, {3.6586677162218647`*^9, 3.65866771943545*^9}, {
   3.6586679592915487`*^9, 3.6586679623791447`*^9}, {3.6587545292808523`*^9, 
   3.658754533238557*^9}, {3.6587837105052223`*^9, 3.658783713057167*^9}, 
   3.65945999604956*^9, {3.659540891337019*^9, 3.659540911182705*^9}, {
   3.673106929323419*^9, 3.673106941361766*^9}, 3.6732708523444443`*^9, {
   3.673384154439589*^9, 3.673384154958981*^9}, {3.673464062383*^9, 
   3.6734640629716673`*^9}, {3.673468946553741*^9, 3.673468948871739*^9}, {
   3.67354246851402*^9, 3.6735425236229467`*^9}, {3.6735425616143417`*^9, 
   3.673542590636383*^9}, 3.6735426354443493`*^9, {3.673542698904351*^9, 
   3.6735427139282084`*^9}, {3.6735427822936487`*^9, 3.673542788059897*^9}, {
   3.673542822757875*^9, 3.673542832945891*^9}, {3.6735428946243362`*^9, 
   3.6735429013936453`*^9}, {3.6735430805849533`*^9, 3.673543082663267*^9}, {
   3.6741158165884123`*^9, 3.6741158285553493`*^9}, 3.67543526813694*^9, {
   3.6754353012898808`*^9, 3.675435374905154*^9}, {3.6754355237552967`*^9, 
   3.6754355266668653`*^9}, {3.675435616522097*^9, 3.675435617055993*^9}, {
   3.6756903407825212`*^9, 3.675690348381796*^9}, {3.67697727145512*^9, 
   3.676977292836473*^9}, {3.676979834051176*^9, 3.6769798389368477`*^9}, {
   3.676983998484001*^9, 3.676984003905734*^9}, {3.676984052408196*^9, 
   3.6769840868654337`*^9}, {3.676996955059721*^9, 3.676996956432754*^9}, {
   3.677012591993936*^9, 3.6770125950879707`*^9}, {3.677250591320848*^9, 
   3.677250640284758*^9}, {3.677250808015338*^9, 3.677250835531917*^9}, {
   3.677250877115898*^9, 3.6772508801067877`*^9}, {3.677254825061709*^9, 
   3.6772549136318693`*^9}, {3.6772549732956963`*^9, 3.677255032506489*^9}, {
   3.677255689977037*^9, 3.677255707254291*^9}, {3.677343220932239*^9, 
   3.677343274840543*^9}, {3.677399955334128*^9, 3.677399975180067*^9}, {
   3.677422972105281*^9, 3.6774229893032084`*^9}, {3.677423033973978*^9, 
   3.6774230390536547`*^9}, {3.6774233056396008`*^9, 3.677423305780403*^9}, 
   3.677423342254219*^9, 3.6986771961611*^9, {3.698752697560107*^9, 
   3.698752721935236*^9}, 3.6987527747098703`*^9, 3.698752825174597*^9, {
   3.6987572340622883`*^9, 3.698757408619841*^9}, {3.698757440436182*^9, 
   3.6987574408606787`*^9}, {3.698757517338088*^9, 3.698757518064335*^9}, {
   3.698757680067483*^9, 3.69875771458523*^9}, {3.698757767130027*^9, 
   3.6987577831107264`*^9}, {3.698757861123987*^9, 3.698757862403448*^9}, {
   3.700572294792438*^9, 3.700572354596798*^9}, {3.700573895135209*^9, 
   3.700573915180554*^9}, {3.702476257834423*^9, 3.702476267792323*^9}, {
   3.702476959727911*^9, 3.702476992772256*^9}, {3.702477338464695*^9, 
   3.7024773399014387`*^9}, 3.702894951182213*^9, {3.702895356111032*^9, 
   3.7028953824036083`*^9}, {3.702895611343174*^9, 3.70289565749229*^9}, {
   3.702895731123527*^9, 3.702895732216481*^9}, {3.7028958057914047`*^9, 
   3.7028958066999702`*^9}, {3.704725183685264*^9, 3.704725185330536*^9}, {
   3.706982147334373*^9, 3.706982201186384*^9}, {3.70698242022127*^9, 
   3.706982425865942*^9}, 3.706982988816984*^9, {3.707488228817975*^9, 
   3.7074882445519047`*^9}, 3.7115569553266582`*^9, 3.7122424565701838`*^9, 
   3.748074577454171*^9},
 CellLabel->
  "In[184]:=",ExpressionUUID->"ff8134b7-41ad-483b-a358-a224d62637ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Execute code below (if all fncs eval\[CloseCurlyQuote]ed above).", \
"Subsubsection",
 CellChangeTimes->{{3.64578303572208*^9, 3.645783064364355*^9}, {
  3.6458029675612717`*^9, 3.64580298132803*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"debug", "=", "False"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<faces=\>\"", ",", "faces"}], "]"}], ";", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"edges", ",", "adjfaces"}], "}"}], "=", 
     RowBox[{"FindAdjFacesEdges", "[", "faces", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<edges=\>\"", ",", "edges", ",", "\"\<\\nadjfaces=\>\"", ",", 
      "adjfaces"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"fangs", "=", 
     RowBox[{"FindAngles", "[", "faces", "]"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"Print", "[", 
     RowBox[{"\"\<fangs(deg)=\\n\>\"", ",", 
      RowBox[{"fangs", " ", "RadDeg"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<vadjccws=\\n\>\"", ",", 
      RowBox[{"vadjccws", "=", 
       RowBox[{"CreateVadjs", "[", "]"}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"\[Omega]bot", "=", 
     RowBox[{"CurvVertex", "[", 
      RowBox[{"zinds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Omega]top", "=", 
     RowBox[{"CurvVertex", "[", 
      RowBox[{"zinds", "\[LeftDoubleBracket]", 
       RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<{\[Omega]bot,\[Omega]top}=\>\"", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Omega]bot", ",", "\[Omega]top"}], "}"}], " ", "RadDeg"}]}],
      "]"}], ";"}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6458030196866903`*^9, 3.645803060829349*^9}, 
   3.645808510836632*^9, 3.645808551261051*^9, {3.646300903628263*^9, 
   3.646300916971074*^9}, {3.646324513772956*^9, 3.64632451621157*^9}, {
   3.6474437088790503`*^9, 3.6474437145455647`*^9}, {3.649421624080832*^9, 
   3.649421634192726*^9}, 3.675371566909719*^9},
 CellLabel->
  "In[160]:=",ExpressionUUID->"f7959038-4718-436a-b68c-eef18ae6dc92"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1164, 767},
WindowMargins->{{74, Automatic}, {Automatic, 0}},
Magnification:>2. Inherited,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 386, 6, 226, "Title",ExpressionUUID->"f5ed46be-eebb-4ff1-b593-1531e5e344da"],
Cell[968, 30, 525, 13, 202, "Subtitle",ExpressionUUID->"694d5d75-b844-434a-ab80-1e85c4d00e69"],
Cell[1496, 45, 788, 19, 236, "Text",ExpressionUUID->"26e23b3f-407c-4255-9c0f-01ffbcf07efe"],
Cell[2287, 66, 2636, 73, 641, "Text",ExpressionUUID->"1b36ca02-1e33-422e-b38c-3024111dad51"],
Cell[4926, 141, 1049, 25, 146, "Text",ExpressionUUID->"0dd73719-5a4e-4fce-9207-2cbf59e3004d"],
Cell[CellGroupData[{
Cell[6000, 170, 1119, 34, 205, "Input",ExpressionUUID->"94c7e2c2-7b2a-458e-a348-13fc2a64f097"],
Cell[7122, 206, 1718, 28, 47, "Print",ExpressionUUID->"104879eb-97d6-4081-ae8f-57e8ead0dda6"]
}, Open  ]],
Cell[8855, 237, 253, 5, 680, "Input",ExpressionUUID->"cb83b433-ac88-4aef-8d56-585b9dcc031f"],
Cell[9111, 244, 1084, 18, 824, "Text",ExpressionUUID->"00e5aff1-3e30-428b-b8eb-1d61a85a415e"],
Cell[10198, 264, 8959, 220, 7636, "Input",ExpressionUUID->"ea192a46-ea88-4f3c-86bf-6ffc8ccfc839"],
Cell[19160, 486, 1262, 19, 520, "Text",ExpressionUUID->"8175e414-4294-4e74-a730-07bfc8d71502"],
Cell[20425, 507, 1245, 33, 1240, "Input",ExpressionUUID->"5684cea0-3ca3-4c64-8729-ee9f70dcc4f1"],
Cell[21673, 542, 5145, 130, 5012, "Input",ExpressionUUID->"6c3c0996-2c8a-4821-aef6-a801bc6b697b"],
Cell[26821, 674, 1195, 17, 368, "Text",ExpressionUUID->"6bfce2b9-1862-406d-8278-dac75b9652ae"],
Cell[28019, 693, 675, 21, 824, "Text",ExpressionUUID->"8c25d9f9-77fc-4513-99d7-9337b1d26f87"],
Cell[28697, 716, 8652, 211, 7636, "Input",ExpressionUUID->"419d3137-a9c8-4fe3-9fb2-4d55b3accbbb"],
Cell[37352, 929, 2882, 76, 2716, "Input",ExpressionUUID->"a87ce098-277e-4940-ae64-ba14300d11c5"],
Cell[40237, 1007, 1524, 41, 1568, "Input",ExpressionUUID->"ed2bea40-8dcc-4d0e-bc8a-7f99a3003996"],
Cell[41764, 1050, 4652, 113, 4192, "Input",ExpressionUUID->"ee11abfc-b4dc-4378-ad55-8164bf7dc476"],
Cell[46419, 1165, 1820, 32, 2256, "Text",ExpressionUUID->"3a4af80c-51b2-43fe-b938-ec2ebda08d46"],
Cell[48242, 1199, 15615, 377, 30208, "Input",ExpressionUUID->"bb0ea709-9239-4a2b-818e-cc1dbfb6d72d"],
Cell[63860, 1578, 347, 6, 5888, "Text",ExpressionUUID->"3898aed1-4ca0-41b9-b8b6-1aaccc1b96f8"],
Cell[64210, 1586, 961, 13, 5888, "Text",ExpressionUUID->"1e123137-101d-442f-bdfe-d7882a54efc0"],
Cell[65174, 1601, 1004, 14, 736, "Text",ExpressionUUID->"06082e23-ee05-4cab-b5f4-e97ca64718e8"],
Cell[66181, 1617, 2300, 60, 1896, "Input",ExpressionUUID->"3338f2bb-b221-405f-b52a-062f7a61e1e8"],
Cell[68484, 1679, 1869, 29, 1432, "Text",ExpressionUUID->"dc49ac0b-7d6e-4449-8785-cc39051ac185"],
Cell[70356, 1710, 1785, 28, 1280, "Text",ExpressionUUID->"37fdc29e-b7b9-42ea-923a-a972acb42473"],
Cell[72144, 1740, 1716, 27, 520, "Text",ExpressionUUID->"90d96695-4261-4ddc-baf9-bee6e161bc2d"],
Cell[73863, 1769, 9927, 200, 7636, "Input",ExpressionUUID->"c3228bf8-23b3-4d24-a4bd-908faa76c894"],
Cell[83793, 1971, 7587, 154, 5012, "Input",ExpressionUUID->"26152516-eb69-4771-b9ad-6f98353c03a0"],
Cell[91383, 2127, 10940, 241, 7148, "Input",ExpressionUUID->"e721d7c5-f86e-4e1f-9d14-5d54f4bd0f04"],
Cell[102326, 2370, 1652, 25, 1128, "Text",ExpressionUUID->"8c194128-9971-421d-85ab-33a22a00d95d"],
Cell[103981, 2397, 1915, 30, 1280, "Text",ExpressionUUID->"2bb1c065-1444-4910-91c4-2fb209afcbfb"],
Cell[105899, 2429, 7982, 188, 8292, "Input",ExpressionUUID->"f3b04405-f7c7-45d2-8c6f-807052dd1bff"],
Cell[113884, 2619, 326, 6, 672, "Text",ExpressionUUID->"99c57106-91d6-422d-a323-87fa2f43e5a9"],
Cell[114213, 2627, 25736, 591, 20264, "Input",ExpressionUUID->"c3c65c17-98a4-4314-9a85-7ef38337ce41"],
Cell[CellGroupData[{
Cell[139974, 3222, 172, 2, 400, "Subsubsection",ExpressionUUID->"f108fe2b-74de-4962-9c24-507c9c2becc5"],
Cell[140149, 3226, 2517, 63, 1896, "Input",ExpressionUUID->"0380da75-49fe-4234-9427-354577bd1afd"],
Cell[142669, 3291, 1692, 25, 520, "Text",ExpressionUUID->"9dc3a714-b11f-45da-8f79-bc613e9c0e0d"],
Cell[144364, 3318, 1700, 23, 368, "Text",ExpressionUUID->"a991f2f1-4873-4eda-807f-44f9162a3ed1"],
Cell[146067, 3343, 1620, 22, 736, "Text",ExpressionUUID->"05378f78-5960-4564-88d8-5f9829da4707"],
Cell[147690, 3367, 1333, 34, 2656, "Input",ExpressionUUID->"ea5284fe-bf6b-4e0e-b5cd-6e829e13129d"],
Cell[149026, 3403, 1613, 22, 736, "Text",ExpressionUUID->"d80beeb1-4741-427e-ba2e-408b32df096b"],
Cell[150642, 3427, 1904, 50, 3640, "Input",ExpressionUUID->"48c3b863-e3d1-49ac-81f9-0c1a2c45a3a8"],
Cell[152549, 3479, 1698, 26, 146, "Text",ExpressionUUID->"1d2bcad2-f404-48d6-a6d6-7b33d9f8f7e4"],
Cell[CellGroupData[{
Cell[154272, 3509, 5865, 141, 1353, "Input",ExpressionUUID->"dc8d2193-d822-4dbb-b5ec-ee17f69b16b1"],
Cell[160140, 3652, 1433, 24, 67, "Output",ExpressionUUID->"c9cc92c6-8c3d-4e8e-a289-4c85ce6436ce"]
}, Open  ]],
Cell[161588, 3679, 1757, 25, 368, "Text",ExpressionUUID->"45dde15d-ac57-418a-8329-f8d91dcca397"],
Cell[163348, 3706, 2749, 64, 2880, "Input",ExpressionUUID->"a6ecbf7d-ba2a-4caf-bf56-b0d1b7812775"],
Cell[166100, 3772, 2020, 31, 672, "Text",ExpressionUUID->"78162779-1c64-4e28-95d1-7d26738edba6"],
Cell[168123, 3805, 429, 8, 520, "Text",ExpressionUUID->"5889b93a-ba2e-48be-be6e-eaeee49f0a73"],
Cell[168555, 3815, 1708, 44, 1404, "Input",ExpressionUUID->"dcd77861-3400-4c7e-a772-971c864df014"],
Cell[170266, 3861, 175, 3, 680, "Input",ExpressionUUID->"55df649a-d12e-4cd4-8268-4559bbe63f08"],
Cell[170444, 3866, 2699, 49, 3168, "Text",ExpressionUUID->"dc12eb55-df54-4791-8850-55584a47610d"],
Cell[173146, 3917, 1985, 50, 2224, "Input",ExpressionUUID->"68a0600d-9160-422b-a26a-4c195926f5db"],
Cell[175134, 3969, 1718, 44, 1732, "Input",ExpressionUUID->"83c41ea7-7dc1-4c23-9897-4199de043421"],
Cell[176855, 4015, 4353, 98, 3372, "Input",ExpressionUUID->"b9030867-7a00-4150-8f1e-1cdba9779333"],
Cell[181211, 4115, 247, 4, 252, "Input",ExpressionUUID->"3b43d3dd-1585-4c85-94bc-01049feb596a"],
Cell[181461, 4121, 3298, 81, 3700, "Input",ExpressionUUID->"2fa94751-620f-4be3-8778-9abdc6f6e483"],
Cell[184762, 4204, 1456, 23, 236, "Text",ExpressionUUID->"8dfb9e3c-afad-497b-8520-20d2b6cc5078"],
Cell[CellGroupData[{
Cell[186243, 4231, 4485, 103, 820, "Input",ExpressionUUID->"27394e0f-a525-46e1-9b83-7d7f5e735ea3"],
Cell[190731, 4336, 728, 12, 89, "Output",ExpressionUUID->"81e9eb2d-059f-4e7a-acf1-3cf6ec443bdf"]
}, Open  ]],
Cell[191474, 4351, 1524, 37, 1404, "Input",ExpressionUUID->"10b364d7-8c39-416b-b7fc-8815697f75e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193035, 4393, 294, 4, 400, "Subsubsection",ExpressionUUID->"04b5746f-d944-4ce2-98de-202126cea431"],
Cell[193332, 4399, 4500, 104, 943, "Input",ExpressionUUID->"6d962b89-76b0-4201-9cad-68da8d19d0cd"],
Cell[197835, 4505, 554, 14, 123, "Input",ExpressionUUID->"293150c0-755d-4a69-9522-f261d958cbbe"],
Cell[198392, 4521, 19642, 409, 3526, "Input",ExpressionUUID->"ff8134b7-41ad-483b-a358-a224d62637ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218071, 4935, 247, 4, 121, "Subsubsection",ExpressionUUID->"0c53ecb3-7feb-47aa-a0f7-6583024480b9"],
Cell[218321, 4941, 2034, 47, 492, "Input",ExpressionUUID->"f7959038-4718-436a-b68c-eef18ae6dc92"]
}, Open  ]]
}, Open  ]]
}
]
*)

